{
  "contractName": "AdventureGold",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "adventureGoldPerTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lootContract",
      "outputs": [
        {
          "internalType": "contract IERC721Enumerable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lootContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "season",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "seasonClaimedByTokenId",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenIdEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenIdStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "claimById",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimAllForOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ownerIndexStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ownerIndexEnd",
          "type": "uint256"
        }
      ],
      "name": "claimRangeForOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountDisplayValue",
          "type": "uint256"
        }
      ],
      "name": "daoMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lootContractAddress_",
          "type": "address"
        }
      ],
      "name": "daoSetLootContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenIdStart_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenIdEnd_",
          "type": "uint256"
        }
      ],
      "name": "daoSetTokenIdRange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "season_",
          "type": "uint256"
        }
      ],
      "name": "daoSetSeason",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "adventureGoldDisplayValue",
          "type": "uint256"
        }
      ],
      "name": "daoSetAdventureGoldPerTokenId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "season_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "adventureGoldDisplayValue",
          "type": "uint256"
        }
      ],
      "name": "daoSetSeasonAndAdventureGoldPerTokenID",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adventureGoldPerTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAllForOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claimById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ownerIndexStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ownerIndexEnd\",\"type\":\"uint256\"}],\"name\":\"claimRangeForOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountDisplayValue\",\"type\":\"uint256\"}],\"name\":\"daoMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"adventureGoldDisplayValue\",\"type\":\"uint256\"}],\"name\":\"daoSetAdventureGoldPerTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lootContractAddress_\",\"type\":\"address\"}],\"name\":\"daoSetLootContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"season_\",\"type\":\"uint256\"}],\"name\":\"daoSetSeason\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"season_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adventureGoldDisplayValue\",\"type\":\"uint256\"}],\"name\":\"daoSetSeasonAndAdventureGoldPerTokenID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenIdStart_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIdEnd_\",\"type\":\"uint256\"}],\"name\":\"daoSetTokenIdRange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lootContract\",\"outputs\":[{\"internalType\":\"contract IERC721Enumerable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lootContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"season\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seasonClaimedByTokenId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIdEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenIdStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Will Papper <https://twitter.com/WillPapper>\",\"custom:unaudited\":\"This contract has not been audited. Use at your own risk.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"claimById(uint256)\":{\"params\":{\"tokenId\":\"The tokenId of the Loot NFT\"}},\"daoMint(uint256)\":{\"params\":{\"amountDisplayValue\":\"The amount of Loot to mint. This should be input as the display value, not in raw decimals. If you want to mint 100 Loot, you should enter \\\"100\\\" rather than the value of 100 * 10^18.\"}},\"daoSetAdventureGoldPerTokenId(uint256)\":{\"params\":{\"adventureGoldDisplayValue\":\"The amount of Loot a user can claim. This should be input as the display value, not in raw decimals. If you want to mint 100 Loot, you should enter \\\"100\\\" rather than the value of 100 * 10^18.\"}},\"daoSetLootContractAddress(address)\":{\"params\":{\"lootContractAddress_\":\"The new contract address for Loot\"}},\"daoSetSeason(uint256)\":{\"params\":{\"season_\":\"The season to use for claiming Loot\"}},\"daoSetSeasonAndAdventureGoldPerTokenID(uint256,uint256)\":{\"details\":\"We would save a tiny amount of gas by modifying the season and adventureGold variables directly. It is better practice for security, however, to avoid repeating code. This function is so rarely used that it's not worth moving these values into their own internal function to skip the gas used on the modifier check.\",\"params\":{\"adventureGoldDisplayValue\":\"The amount of Loot a user can claim. This should be input as the display value, not in raw decimals. If you want to mint 100 Loot, you should enter \\\"100\\\" rather than the value of 100 * 10^18.\",\"season_\":\"The season to use for claiming loot\"}},\"daoSetTokenIdRange(uint256,uint256)\":{\"details\":\"This is relevant in case a future Loot contract has a different total supply of Loot\",\"params\":{\"tokenIdEnd_\":\"The end of the eligible token range\",\"tokenIdStart_\":\"The start of the eligible token range\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Adventure Gold for Loot holders!\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimAllForOwner()\":{\"notice\":\"Claim Adventure Gold for all tokens owned by the senderThis function will run out of gas if you have too much loot! If this is a concern, you should use claimRangeForOwner and claim Adventure Gold in batches.\"},\"claimById(uint256)\":{\"notice\":\"Claim Adventure Gold for a given Loot ID\"},\"claimRangeForOwner(uint256,uint256)\":{\"notice\":\"Claim Adventure Gold for all tokens owned by the sender within a given rangeThis function is useful if you own too much Loot to claim all at once or if you want to leave some Loot unclaimed. If you leave Loot unclaimed, however, you cannot claim it once the next season starts.\"},\"daoMint(uint256)\":{\"notice\":\"Allows the DAO to mint new tokens for use within the Loot Ecosystem\"},\"daoSetAdventureGoldPerTokenId(uint256)\":{\"notice\":\"Allows the DAO to set the amount of Adventure Gold that is claimed per token ID\"},\"daoSetLootContractAddress(address)\":{\"notice\":\"Allows the DAO to set a new contract address for Loot. This is relevant in the event that Loot migrates to a new contract.\"},\"daoSetSeason(uint256)\":{\"notice\":\"Allows the DAO to set a season for new Adventure Gold claims\"},\"daoSetSeasonAndAdventureGoldPerTokenID(uint256,uint256)\":{\"notice\":\"Allows the DAO to set the season and Adventure Gold per token ID in one transaction. This ensures that there is not a gap where a user can claim more Adventure Gold than others\"},\"daoSetTokenIdRange(uint256,uint256)\":{\"notice\":\"Allows the DAO to set the token IDs that are eligible to claim Loot\"},\"tokenIdEnd()\":{\"notice\":\"function ownerClaim(uint256 tokenId) public nonReentrant onlyOwner { require(tokenId > 7777 && tokenId < 8001, \\\"Token ID invalid\\\"); _safeMint(owner(), tokenId); }\"},\"tokenIdStart()\":{\"notice\":\"function claim(uint256 tokenId) public nonReentrant { require(tokenId > 0 && tokenId < 7778, \\\"Token ID invalid\\\"); _safeMint(_msgSender(), tokenId); }\"}},\"notice\":\"This contract mints Adventure Gold for Loot holders and provides administrative functions to the Loot DAO. It allows: * Loot holders to claim Adventure Gold * A DAO to set seasons for new opportunities to claim Adventure Gold * A DAO to mint Adventure Gold for use within the Loot ecosystem\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/will/Dropbox/Syndicate/Development/AdventureGold/contracts/AdventureGold.sol\":\"AdventureGold\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/will/Dropbox/Syndicate/Development/AdventureGold/contracts/AdventureGold.sol\":{\"keccak256\":\"0x5fcf2dbd3f3deacf5afde25559d6ac61fde57cb4854b9416b3635343910e35a8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://56339c8f4bd5d4afc51ac0e8869d2d414de36a44661a5dd4b1c74d5e3396c0af\",\"dweb:/ipfs/QmfUhgKhqpnT1H1fzbL2MzNcfMZv1Gf939fXhzXMmLYVSg\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xa69205e5009601cf13be78b1e2f500e1e3b1d8012f22d966e63975273f602038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d919a0061e43f9878f6171b7f853cb92093805cd1160858c1884195a639b40a0\",\"dweb:/ipfs/QmRZsS3EYuLp75nBym1QQ4y6aQXGew75wSbv1uwqkvouUK\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x6080604052600680546001600160a01b03191673ff9c1b15b16263c61d017ee9f65c50e4ae0113d717905562000033601290565b6200004090600a62000360565b6200004e906127106200042e565b6008556001600955611f40600a556000600b553480156200006e57600080fd5b506040518060400160405280600e81526020016d10591d995b9d1d5c994811dbdb1960921b815250604051806040016040528060048152602001631051d31160e21b815250620000cd620000c76200014860201b60201c565b6200014c565b8151620000e290600490602085019062000271565b508051620000f890600590602084019062000271565b5050506200012073cd814c83198c15a542f9a13faf84d518d1744ed16200019c60201b60201c565b600654600780546001600160a01b0319166001600160a01b03909216919091179055620004a3565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001fc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620002635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001f3565b6200026e816200014c565b50565b8280546200027f9062000450565b90600052602060002090601f016020900481019282620002a35760008555620002ee565b82601f10620002be57805160ff1916838001178555620002ee565b82800160010185558215620002ee579182015b82811115620002ee578251825591602001919060010190620002d1565b50620002fc92915062000300565b5090565b5b80821115620002fc576000815560010162000301565b600181815b80851115620003585781600019048211156200033c576200033c6200048d565b808516156200034a57918102915b93841c93908002906200031c565b509250929050565b60006200037160ff84168362000378565b9392505050565b600082620003895750600162000428565b81620003985750600062000428565b8160018114620003b15760028114620003bc57620003dc565b600191505062000428565b60ff841115620003d057620003d06200048d565b50506001821b62000428565b5060208310610133831016604e8410600b841016171562000401575081810a62000428565b6200040d838362000317565b80600019048211156200042457620004246200048d565b0290505b92915050565b60008160001904831182151516156200044b576200044b6200048d565b500290565b600181811c908216806200046557607f821691505b602082108114156200048757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b61157c80620004b36000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806370a0823111610104578063a8af32e9116100a2578063cbf0b27611610071578063cbf0b276146103d3578063dd62ed3e146103db578063e5e808cb14610414578063f2fde38b1461044257600080fd5b8063a8af32e914610391578063a9059cbb146103a4578063becf7741146103b7578063c50b0fb0146103ca57600080fd5b8063878e7ea5116100de578063878e7ea5146103525780638da5cb5b1461036557806395d89b4114610376578063a457c2d71461037e57600080fd5b806370a0823114610318578063715018a614610341578063845f290d1461034957600080fd5b806332565c491161017c57806342e473151161014b57806342e47315146102d657806343f42802146102e95780634da7808a146102f257806362759f6c1461030557600080fd5b806332565c491461027257806332c882041461028557806335b48afd1461029857806339509351146102c357600080fd5b806318f510eb116101b857806318f510eb1461023257806323b872dd146102475780632a3890621461025a578063313ce5671461026357600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e7610455565b6040516101f49190611316565b60405180910390f35b61021061020b366004611296565b6104e7565b60405190151581526020016101f4565b6003545b6040519081526020016101f4565b6102456102403660046112f4565b6104fe565b005b610210610255366004611255565b610547565b61022460095481565b604051601281526020016101f4565b6102456102803660046112c2565b6105f1565b6102456102933660046111db565b610637565b6007546102ab906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b6102106102d1366004611296565b61068d565b6102456102e43660046112c2565b6106c9565b610224600a5481565b6102456103003660046112f4565b6106f8565b6102456103133660046112c2565b61072d565b6102246103263660046111db565b6001600160a01b031660009081526001602052604090205490565b61024561078a565b61022460085481565b6102456103603660046112f4565b6107c0565b6000546001600160a01b03166102ab565b6101e7610991565b61021061038c366004611296565b6109a0565b6006546102ab906001600160a01b031681565b6102106103b2366004611296565b610a39565b6102456103c53660046112c2565b610a46565b610224600b5481565b610245610b20565b6102246103e936600461121c565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6102106104223660046112f4565b600c60209081526000928352604080842090915290825290205460ff1681565b6102456104503660046111db565b610c28565b606060048054610464906114c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610490906114c5565b80156104dd5780601f106104b2576101008083540402835291602001916104dd565b820191906000526020600020905b8154815290600101906020018083116104c057829003601f168201915b5050505050905090565b60006104f4338484610cc0565b5060015b92915050565b6000546001600160a01b031633146105315760405162461bcd60e51b81526004016105289061136b565b60405180910390fd5b61053a826106c9565b610543816105f1565b5050565b6000610554848484610de4565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156105d95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610528565b6105e68533858403610cc0565b506001949350505050565b6000546001600160a01b0316331461061b5760405162461bcd60e51b81526004016105289061136b565b6106276012600a6113fb565b61063190826114a6565b60085550565b6000546001600160a01b031633146106615760405162461bcd60e51b81526004016105289061136b565b600680546001600160a01b039092166001600160a01b0319928316811790915560078054909216179055565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916104f49185906106c49086906113a0565b610cc0565b6000546001600160a01b031633146106f35760405162461bcd60e51b81526004016105289061136b565b600b55565b6000546001600160a01b031633146107225760405162461bcd60e51b81526004016105289061136b565b600991909155600a55565b6000546001600160a01b031633146107575760405162461bcd60e51b81526004016105289061136b565b61078761076c6000546001600160a01b031690565b6107786012600a6113fb565b61078290846114a6565b610fb2565b50565b6000546001600160a01b031633146107b45760405162461bcd60e51b81526004016105289061136b565b6107be6000611091565b565b6007546000906001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c91906112db565b9050600081116108905760405162461bcd60e51b815260206004820152600f60248201526e1393d7d513d2d15394d7d3d5d39151608a1b6044820152606401610528565b8082106108d45760405162461bcd60e51b8152602060048201526012602482015271494e4445585f4f55545f4f465f52414e474560701b6044820152606401610528565b825b8281101561098b57600754610979906001600160a01b0316632f745c59335b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024810185905260440160206040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097391906112db565b336110e1565b8061098381611500565b9150506108d6565b50505050565b606060058054610464906114c5565b3360009081526002602090815260408083206001600160a01b038616845290915281205482811015610a225760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610528565b610a2f3385858403610cc0565b5060019392505050565b60006104f4338484610de4565b6007546040516331a9108f60e11b8152600481018390526001600160a01b0390911690636352211e9060240160206040518083038186803b158015610a8a57600080fd5b505afa158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac291906111ff565b6001600160a01b0316336001600160a01b031614610b165760405162461bcd60e51b8152602060048201526011602482015270135554d517d3d5d397d513d2d15397d251607a1b6044820152606401610528565b61078781336110e1565b6007546000906001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015610b7457600080fd5b505afa158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac91906112db565b905060008111610bf05760405162461bcd60e51b815260206004820152600f60248201526e1393d7d513d2d15394d7d3d5d39151608a1b6044820152606401610528565b60005b8181101561054357600754610c16906001600160a01b0316632f745c59336108f5565b80610c2081611500565b915050610bf3565b6000546001600160a01b03163314610c525760405162461bcd60e51b81526004016105289061136b565b6001600160a01b038116610cb75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610528565b61078781611091565b6001600160a01b038316610d225760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610528565b6001600160a01b038216610d835760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610528565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e485760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610528565b6001600160a01b038216610eaa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610528565b6001600160a01b03831660009081526001602052604090205481811015610f225760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610528565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610f599084906113a0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fa591815260200190565b60405180910390a361098b565b6001600160a01b0382166110085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610528565b806003600082825461101a91906113a0565b90915550506001600160a01b038216600090815260016020526040812080548392906110479084906113a0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60095482101580156110f55750600a548211155b6111395760405162461bcd60e51b8152602060048201526015602482015274544f4b454e5f49445f4f55545f4f465f52414e474560581b6044820152606401610528565b600b546000908152600c6020908152604080832085845290915290205460ff16156111a65760405162461bcd60e51b815260206004820152601960248201527f474f4c445f434c41494d45445f464f525f544f4b454e5f4944000000000000006044820152606401610528565b600b546000908152600c602090815260408083208584529091529020805460ff19166001179055600854610543908290610fb2565b6000602082840312156111ed57600080fd5b81356111f881611531565b9392505050565b60006020828403121561121157600080fd5b81516111f881611531565b6000806040838503121561122f57600080fd5b823561123a81611531565b9150602083013561124a81611531565b809150509250929050565b60008060006060848603121561126a57600080fd5b833561127581611531565b9250602084013561128581611531565b929592945050506040919091013590565b600080604083850312156112a957600080fd5b82356112b481611531565b946020939093013593505050565b6000602082840312156112d457600080fd5b5035919050565b6000602082840312156112ed57600080fd5b5051919050565b6000806040838503121561130757600080fd5b50508035926020909101359150565b600060208083528351808285015260005b8181101561134357858101830151858201604001528201611327565b81811115611355576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156113b3576113b361151b565b500190565b600181815b808511156113f35781600019048211156113d9576113d961151b565b808516156113e657918102915b93841c93908002906113bd565b509250929050565b60006111f860ff841683600082611414575060016104f8565b81611421575060006104f8565b816001811461143757600281146114415761145d565b60019150506104f8565b60ff8411156114525761145261151b565b50506001821b6104f8565b5060208310610133831016604e8410600b8410161715611480575081810a6104f8565b61148a83836113b8565b806000190482111561149e5761149e61151b565b029392505050565b60008160001904831182151516156114c0576114c061151b565b500290565b600181811c908216806114d957607f821691505b602082108114156114fa57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156115145761151461151b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461078757600080fdfea2646970667358221220241ebb947b57a5734e5a40274a0a9146a363cbfaab5f7be379f5720cc00b2fce64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806370a0823111610104578063a8af32e9116100a2578063cbf0b27611610071578063cbf0b276146103d3578063dd62ed3e146103db578063e5e808cb14610414578063f2fde38b1461044257600080fd5b8063a8af32e914610391578063a9059cbb146103a4578063becf7741146103b7578063c50b0fb0146103ca57600080fd5b8063878e7ea5116100de578063878e7ea5146103525780638da5cb5b1461036557806395d89b4114610376578063a457c2d71461037e57600080fd5b806370a0823114610318578063715018a614610341578063845f290d1461034957600080fd5b806332565c491161017c57806342e473151161014b57806342e47315146102d657806343f42802146102e95780634da7808a146102f257806362759f6c1461030557600080fd5b806332565c491461027257806332c882041461028557806335b48afd1461029857806339509351146102c357600080fd5b806318f510eb116101b857806318f510eb1461023257806323b872dd146102475780632a3890621461025a578063313ce5671461026357600080fd5b806306fdde03146101df578063095ea7b3146101fd57806318160ddd14610220575b600080fd5b6101e7610455565b6040516101f49190611316565b60405180910390f35b61021061020b366004611296565b6104e7565b60405190151581526020016101f4565b6003545b6040519081526020016101f4565b6102456102403660046112f4565b6104fe565b005b610210610255366004611255565b610547565b61022460095481565b604051601281526020016101f4565b6102456102803660046112c2565b6105f1565b6102456102933660046111db565b610637565b6007546102ab906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b6102106102d1366004611296565b61068d565b6102456102e43660046112c2565b6106c9565b610224600a5481565b6102456103003660046112f4565b6106f8565b6102456103133660046112c2565b61072d565b6102246103263660046111db565b6001600160a01b031660009081526001602052604090205490565b61024561078a565b61022460085481565b6102456103603660046112f4565b6107c0565b6000546001600160a01b03166102ab565b6101e7610991565b61021061038c366004611296565b6109a0565b6006546102ab906001600160a01b031681565b6102106103b2366004611296565b610a39565b6102456103c53660046112c2565b610a46565b610224600b5481565b610245610b20565b6102246103e936600461121c565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6102106104223660046112f4565b600c60209081526000928352604080842090915290825290205460ff1681565b6102456104503660046111db565b610c28565b606060048054610464906114c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610490906114c5565b80156104dd5780601f106104b2576101008083540402835291602001916104dd565b820191906000526020600020905b8154815290600101906020018083116104c057829003601f168201915b5050505050905090565b60006104f4338484610cc0565b5060015b92915050565b6000546001600160a01b031633146105315760405162461bcd60e51b81526004016105289061136b565b60405180910390fd5b61053a826106c9565b610543816105f1565b5050565b6000610554848484610de4565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156105d95760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610528565b6105e68533858403610cc0565b506001949350505050565b6000546001600160a01b0316331461061b5760405162461bcd60e51b81526004016105289061136b565b6106276012600a6113fb565b61063190826114a6565b60085550565b6000546001600160a01b031633146106615760405162461bcd60e51b81526004016105289061136b565b600680546001600160a01b039092166001600160a01b0319928316811790915560078054909216179055565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916104f49185906106c49086906113a0565b610cc0565b6000546001600160a01b031633146106f35760405162461bcd60e51b81526004016105289061136b565b600b55565b6000546001600160a01b031633146107225760405162461bcd60e51b81526004016105289061136b565b600991909155600a55565b6000546001600160a01b031633146107575760405162461bcd60e51b81526004016105289061136b565b61078761076c6000546001600160a01b031690565b6107786012600a6113fb565b61078290846114a6565b610fb2565b50565b6000546001600160a01b031633146107b45760405162461bcd60e51b81526004016105289061136b565b6107be6000611091565b565b6007546000906001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b15801561081457600080fd5b505afa158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c91906112db565b9050600081116108905760405162461bcd60e51b815260206004820152600f60248201526e1393d7d513d2d15394d7d3d5d39151608a1b6044820152606401610528565b8082106108d45760405162461bcd60e51b8152602060048201526012602482015271494e4445585f4f55545f4f465f52414e474560701b6044820152606401610528565b825b8281101561098b57600754610979906001600160a01b0316632f745c59335b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526024810185905260440160206040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097391906112db565b336110e1565b8061098381611500565b9150506108d6565b50505050565b606060058054610464906114c5565b3360009081526002602090815260408083206001600160a01b038616845290915281205482811015610a225760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610528565b610a2f3385858403610cc0565b5060019392505050565b60006104f4338484610de4565b6007546040516331a9108f60e11b8152600481018390526001600160a01b0390911690636352211e9060240160206040518083038186803b158015610a8a57600080fd5b505afa158015610a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac291906111ff565b6001600160a01b0316336001600160a01b031614610b165760405162461bcd60e51b8152602060048201526011602482015270135554d517d3d5d397d513d2d15397d251607a1b6044820152606401610528565b61078781336110e1565b6007546000906001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015610b7457600080fd5b505afa158015610b88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bac91906112db565b905060008111610bf05760405162461bcd60e51b815260206004820152600f60248201526e1393d7d513d2d15394d7d3d5d39151608a1b6044820152606401610528565b60005b8181101561054357600754610c16906001600160a01b0316632f745c59336108f5565b80610c2081611500565b915050610bf3565b6000546001600160a01b03163314610c525760405162461bcd60e51b81526004016105289061136b565b6001600160a01b038116610cb75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610528565b61078781611091565b6001600160a01b038316610d225760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610528565b6001600160a01b038216610d835760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610528565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610e485760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610528565b6001600160a01b038216610eaa5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610528565b6001600160a01b03831660009081526001602052604090205481811015610f225760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610528565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610f599084906113a0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610fa591815260200190565b60405180910390a361098b565b6001600160a01b0382166110085760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610528565b806003600082825461101a91906113a0565b90915550506001600160a01b038216600090815260016020526040812080548392906110479084906113a0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60095482101580156110f55750600a548211155b6111395760405162461bcd60e51b8152602060048201526015602482015274544f4b454e5f49445f4f55545f4f465f52414e474560581b6044820152606401610528565b600b546000908152600c6020908152604080832085845290915290205460ff16156111a65760405162461bcd60e51b815260206004820152601960248201527f474f4c445f434c41494d45445f464f525f544f4b454e5f4944000000000000006044820152606401610528565b600b546000908152600c602090815260408083208584529091529020805460ff19166001179055600854610543908290610fb2565b6000602082840312156111ed57600080fd5b81356111f881611531565b9392505050565b60006020828403121561121157600080fd5b81516111f881611531565b6000806040838503121561122f57600080fd5b823561123a81611531565b9150602083013561124a81611531565b809150509250929050565b60008060006060848603121561126a57600080fd5b833561127581611531565b9250602084013561128581611531565b929592945050506040919091013590565b600080604083850312156112a957600080fd5b82356112b481611531565b946020939093013593505050565b6000602082840312156112d457600080fd5b5035919050565b6000602082840312156112ed57600080fd5b5051919050565b6000806040838503121561130757600080fd5b50508035926020909101359150565b600060208083528351808285015260005b8181101561134357858101830151858201604001528201611327565b81811115611355576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156113b3576113b361151b565b500190565b600181815b808511156113f35781600019048211156113d9576113d961151b565b808516156113e657918102915b93841c93908002906113bd565b509250929050565b60006111f860ff841683600082611414575060016104f8565b81611421575060006104f8565b816001811461143757600281146114415761145d565b60019150506104f8565b60ff8411156114525761145261151b565b50506001821b6104f8565b5060208310610133831016604e8410600b8410161715611480575081810a6104f8565b61148a83836113b8565b806000190482111561149e5761149e61151b565b029392505050565b60008160001904831182151516156114c0576114c061151b565b500290565b600181811c908216806114d957607f821691505b602082108114156114fa57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156115145761151461151b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461078757600080fdfea2646970667358221220241ebb947b57a5734e5a40274a0a9146a363cbfaab5f7be379f5720cc00b2fce64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2852:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:228:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "349:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "360:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "345:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "345:18:10"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "365:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "338:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "338:36:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "383:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "406:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "391:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "391:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "383:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:10",
                "type": ""
              }
            ],
            "src": "14:402:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "595:182:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "612:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "623:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "605:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "605:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "605:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "646:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "657:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "642:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "642:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "662:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "635:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "635:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "635:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "685:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "696:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "681:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "681:18:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "701:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "674:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "674:62:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "745:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "757:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "768:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "753:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "753:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "745:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "572:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "586:4:10",
                "type": ""
              }
            ],
            "src": "421:356:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "846:358:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "856:16:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "871:1:10",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "860:7:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "881:16:10",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "890:7:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "881:5:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "906:13:10",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "914:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "906:4:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "970:228:10",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1015:22:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1017:16:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1017:18:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1017:18:10"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "990:4:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1004:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "1000:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1000:6:10"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "1008:4:10"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "996:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "996:17:10"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "987:2:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "987:27:10"
                        },
                        "nodeType": "YulIf",
                        "src": "984:53:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1076:29:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1078:25:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "1091:5:10"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "1098:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "1087:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1087:16:10"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "1078:5:10"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "1057:8:10"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "1067:7:10"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1053:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1053:22:10"
                        },
                        "nodeType": "YulIf",
                        "src": "1050:55:10"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1118:23:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1130:4:10"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1136:4:10"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "1126:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1126:15:10"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "1118:4:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1154:34:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "1170:7:10"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "1179:8:10"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "1166:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1166:22:10"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "1154:8:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "939:8:10"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "949:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "936:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:21:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "958:3:10",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "932:3:10",
                    "statements": []
                  },
                  "src": "928:270:10"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "810:5:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "817:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "830:5:10",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "837:4:10",
                "type": ""
              }
            ],
            "src": "782:422:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1277:72:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1287:56:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "1317:4:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "1327:8:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1337:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1323:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1323:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "1296:20:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1296:47:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "1287:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "1248:4:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "1254:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "1267:5:10",
                "type": ""
              }
            ],
            "src": "1209:140:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1413:747:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1451:52:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1465:10:10",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1474:1:10",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "1465:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "1488:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "1433:8:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1426:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1426:16:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1423:80:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1536:52:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1550:10:10",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1559:1:10",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "1550:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "1573:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "1522:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1515:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1515:12:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1512:76:10"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1624:52:10",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "1638:10:10",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1647:1:10",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "1638:5:10"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "1661:5:10"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "1617:59:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1622:1:10",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1692:123:10",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1727:22:10",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1729:16:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1729:18:10"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1729:18:10"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "1712:8:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1722:3:10",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "1709:2:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1709:17:10"
                            },
                            "nodeType": "YulIf",
                            "src": "1706:43:10"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1762:25:10",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "1775:8:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1785:1:10",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1771:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1771:16:10"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "1762:5:10"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "1800:5:10"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "1685:130:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1690:1:10",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "1604:4:10"
                  },
                  "nodeType": "YulSwitch",
                  "src": "1597:218:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1913:70:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1927:28:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1940:4:10"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "1946:8:10"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "1936:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1936:19:10"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "1927:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "1968:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "1837:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1843:2:10",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1834:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1834:12:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "1851:8:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1861:2:10",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1848:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1848:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1830:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1830:35:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "1874:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1880:3:10",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1871:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1871:13:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "1889:8:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1899:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1886:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1886:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1867:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1867:36:10"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1827:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1827:77:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1824:159:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1992:57:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "2034:4:10"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "2040:8:10"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "2015:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2015:34:10"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "1996:7:10",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "2005:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2094:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2096:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2096:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2096:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "2064:7:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2081:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2077:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2077:6:10"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "2085:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "2073:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2073:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2061:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2061:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2058:58:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2125:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "2138:7:10"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "2147:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2134:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2134:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "2125:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "1384:4:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "1390:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "1403:5:10",
                "type": ""
              }
            ],
            "src": "1354:806:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2217:116:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2276:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2278:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2278:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2278:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2248:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2241:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2241:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2234:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2234:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2256:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2267:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2263:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2263:6:10"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2271:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2259:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2259:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2253:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2253:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2230:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2230:45:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2227:71:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2307:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2322:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2325:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2318:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2318:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2307:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2196:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2199:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2205:7:10",
                "type": ""
              }
            ],
            "src": "2165:168:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2393:325:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2403:22:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2417:1:10",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2420:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "2413:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2413:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2403:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2434:38:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2464:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2460:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:12:10"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2438:18:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2511:31:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2513:27:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2527:6:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2535:4:10",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2523:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2523:17:10"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2513:6:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2491:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2484:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:26:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2481:61:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2601:111:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2622:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2629:3:10",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2634:10:10",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2625:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2625:20:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2615:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2615:31:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2615:31:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2666:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2669:4:10",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2659:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2659:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2659:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2694:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2697:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2687:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2687:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2687:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2557:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2580:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2588:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2577:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2577:14:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2554:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2554:38:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2551:161:10"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2373:4:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2382:6:10",
                "type": ""
              }
            ],
            "src": "2338:380:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2755:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2772:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2779:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2784:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2775:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2775:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2765:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2765:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2765:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2812:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2815:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2805:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2805:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2805:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2836:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2839:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2829:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2829:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2829:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2723:127:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12397:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:177:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "225:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "200:24:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "200:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "200:31:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "240:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "250:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "240:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:10",
                "type": ""
              }
            ],
            "src": "14:247:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:170:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "393:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "402:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "405:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "395:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "395:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "395:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "368:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "377:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "364:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "364:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "389:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "360:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "360:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "357:52:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "418:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "437:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "431:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "431:16:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "422:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "481:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "456:24:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "456:31:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "496:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "506:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "496:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "313:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "324:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "336:6:10",
                "type": ""
              }
            ],
            "src": "266:251:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "609:301:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "655:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "664:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "667:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "657:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "657:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "657:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "630:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "639:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "651:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "622:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "619:52:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "680:36:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "706:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "693:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "693:23:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "684:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "750:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "725:24:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "725:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "725:31:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "765:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "775:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "765:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "789:47:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "821:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "832:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "817:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "817:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "804:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "804:32:10"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "793:7:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "870:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "845:24:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "845:33:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "887:17:10",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "897:7:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "887:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "567:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "578:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "590:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "598:6:10",
                "type": ""
              }
            ],
            "src": "522:388:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1019:352:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1065:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1074:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1077:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1067:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1067:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1067:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1040:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1049:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1036:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1061:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1032:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1029:52:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1090:36:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1116:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1103:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:23:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1094:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1160:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1135:24:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1135:31:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1175:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1185:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1175:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1199:47:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1231:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1242:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1227:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1227:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1214:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:32:10"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1203:7:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1280:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1255:24:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1255:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1255:33:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1297:17:10",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1307:7:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1297:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1323:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1350:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1361:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1333:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1333:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1323:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "969:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "980:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "992:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1000:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1008:6:10",
                "type": ""
              }
            ],
            "src": "915:456:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1463:228:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1509:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1518:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1521:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1511:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1511:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1511:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1484:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1493:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1480:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1480:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1505:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1476:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1473:52:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1534:36:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1560:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1547:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:23:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1538:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1604:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1579:24:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1579:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1579:31:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1619:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1629:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1619:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1643:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1670:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1681:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1666:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1666:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1653:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1653:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1643:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1421:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1432:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1444:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1452:6:10",
                "type": ""
              }
            ],
            "src": "1376:315:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1766:110:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1812:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1821:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1824:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1814:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1814:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1814:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1787:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1796:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1783:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1783:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1808:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1779:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1776:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1837:33:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1860:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1847:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:23:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1837:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1732:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1743:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1755:6:10",
                "type": ""
              }
            ],
            "src": "1696:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1962:103:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2008:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2017:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2020:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2010:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2010:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2010:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1983:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1992:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1979:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1979:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2004:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1975:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1975:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1972:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2033:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2049:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2043:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2043:16:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2033:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1928:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1939:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1951:6:10",
                "type": ""
              }
            ],
            "src": "1881:184:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2157:161:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2203:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2212:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2215:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2205:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2205:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2205:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2178:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2187:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2174:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2199:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2170:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2170:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2167:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2228:33:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2251:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2238:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2238:23:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2228:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2270:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2297:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2308:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2293:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2293:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2280:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2280:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2270:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2115:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2126:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2138:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2146:6:10",
                "type": ""
              }
            ],
            "src": "2070:248:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2424:102:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2434:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2446:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2457:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2442:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2442:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2434:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2476:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2491:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2507:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2512:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2503:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2503:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2516:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2499:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2499:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2487:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2487:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2469:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2469:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2469:51:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2393:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2404:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2415:4:10",
                "type": ""
              }
            ],
            "src": "2323:203:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2660:145:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2670:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2682:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2693:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2678:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2678:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2670:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2712:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2727:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2743:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2748:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2739:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2739:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2752:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2735:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2735:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2723:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2723:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2705:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2705:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2705:51:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2776:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2787:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2772:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2772:18:10"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2792:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2765:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2765:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2765:34:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2621:9:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2632:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2640:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2651:4:10",
                "type": ""
              }
            ],
            "src": "2531:274:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2905:92:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2915:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2927:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2938:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2923:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2923:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2915:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2957:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2982:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2975:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2975:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2968:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2968:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2950:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2950:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2950:41:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2874:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2885:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2896:4:10",
                "type": ""
              }
            ],
            "src": "2810:187:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3129:102:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3139:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3151:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3162:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3147:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3147:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3139:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3181:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3196:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3212:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3217:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3208:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3208:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3221:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3204:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3204:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3192:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3192:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3174:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3174:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3174:51:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC721Enumerable_$4225__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3098:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3109:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3120:4:10",
                "type": ""
              }
            ],
            "src": "3002:229:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3357:476:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3367:12:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3377:2:10",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3371:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3395:9:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3406:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3388:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3388:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3388:21:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3418:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3438:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3432:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3432:13:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3422:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3465:9:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3476:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3461:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3461:18:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3481:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3454:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3454:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3454:34:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3497:10:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3506:1:10",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "3501:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3566:90:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3595:9:10"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "3606:1:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3591:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3591:17:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3610:2:10",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3587:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3587:26:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3629:6:10"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3637:1:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3625:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3625:14:10"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3641:2:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3621:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3621:23:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3615:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3615:30:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3580:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3580:66:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3580:66:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3527:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3530:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3524:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3524:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3538:19:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3540:15:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3549:1:10"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3552:2:10"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3545:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3545:10:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3540:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3520:3:10",
                    "statements": []
                  },
                  "src": "3516:140:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3690:66:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "3719:9:10"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "3730:6:10"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3715:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3715:22:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3739:2:10",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3711:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3711:31:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3744:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3704:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3704:42:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3704:42:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3671:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3674:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3668:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3668:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3665:91:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3765:62:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3781:9:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3800:6:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3808:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3796:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3796:15:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3817:2:10",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3813:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3813:7:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3792:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3792:29:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3777:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3777:45:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3824:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3773:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3773:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3765:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3326:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3337:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3348:4:10",
                "type": ""
              }
            ],
            "src": "3236:597:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4012:225:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4029:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4040:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4022:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4022:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4022:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4063:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4074:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4059:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4059:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4079:2:10",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4052:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4052:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4052:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4102:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4113:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4098:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4098:18:10"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4118:34:10",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4091:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4091:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4091:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4173:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4184:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4169:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4169:18:10"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4189:5:10",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4162:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4162:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4162:33:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4204:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4216:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4227:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4212:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4212:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4204:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3989:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4003:4:10",
                "type": ""
              }
            ],
            "src": "3838:399:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4416:168:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4433:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4444:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4426:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4426:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4426:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4467:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4478:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4463:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4463:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4483:2:10",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4456:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4456:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4456:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4506:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4517:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4502:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4502:18:10"
                      },
                      {
                        "hexValue": "494e4445585f4f55545f4f465f52414e4745",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4522:20:10",
                        "type": "",
                        "value": "INDEX_OUT_OF_RANGE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4495:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4495:48:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4495:48:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4552:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4564:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4575:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4560:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4560:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4552:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13cd002bc56c1623555285bb5c785ffb4ff56df7efcae284e655f265eccb4fd6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4393:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4407:4:10",
                "type": ""
              }
            ],
            "src": "4242:342:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4763:228:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4780:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4791:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4773:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4773:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4773:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4814:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4825:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4810:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4810:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4830:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4803:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4803:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4803:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4853:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4864:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4849:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4849:18:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4869:34:10",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4842:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4842:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4842:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4924:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4935:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4920:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4920:18:10"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4940:8:10",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4913:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4913:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4913:36:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4958:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4970:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4981:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4966:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4966:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4958:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4740:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4754:4:10",
                "type": ""
              }
            ],
            "src": "4589:402:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5170:224:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5187:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5198:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5180:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5180:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5180:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5221:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5232:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5217:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5217:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5237:2:10",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5210:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5210:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5210:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5260:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5271:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5256:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5256:18:10"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5276:34:10",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5249:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5249:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5249:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5331:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5342:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5327:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5327:18:10"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5347:4:10",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5320:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5320:32:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5320:32:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5361:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5373:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5384:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5369:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5369:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5361:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5147:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5161:4:10",
                "type": ""
              }
            ],
            "src": "4996:398:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5573:228:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5590:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5601:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5583:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5583:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5583:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5624:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5635:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5620:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5620:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5640:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5613:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5613:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5613:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5663:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5674:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5659:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5659:18:10"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5679:34:10",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5652:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5652:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5652:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5734:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5745:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5730:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5730:18:10"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5750:8:10",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5723:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5723:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5723:36:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5768:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5780:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5791:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5776:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5776:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5768:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5550:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5564:4:10",
                "type": ""
              }
            ],
            "src": "5399:402:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5980:167:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5997:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6008:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5990:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5990:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5990:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6031:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6042:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6027:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6027:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6047:2:10",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6020:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6020:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6020:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6070:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6081:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6066:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6066:18:10"
                      },
                      {
                        "hexValue": "4d5553545f4f574e5f544f4b454e5f4944",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6086:19:10",
                        "type": "",
                        "value": "MUST_OWN_TOKEN_ID"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6059:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6059:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6059:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6115:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6127:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6138:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6123:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6123:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6115:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5be89d048efec085fee54cd2df8b23477ce16bb1f2d36ec34719f0588b00139d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5957:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5971:4:10",
                "type": ""
              }
            ],
            "src": "5806:341:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6326:230:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6343:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6354:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6336:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6336:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6336:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6377:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6388:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6373:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6373:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6393:2:10",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6366:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6366:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6366:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6416:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6427:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6412:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6412:18:10"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6432:34:10",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6405:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6405:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6405:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6487:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6498:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6483:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6483:18:10"
                      },
                      {
                        "hexValue": "6c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6503:10:10",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6476:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6476:38:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6476:38:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6523:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6535:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6546:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6531:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6531:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6523:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6303:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6317:4:10",
                "type": ""
              }
            ],
            "src": "6152:404:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6735:182:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6752:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6763:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6745:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6745:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6745:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6786:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6797:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6782:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6782:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6802:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6775:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6775:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6775:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6825:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6836:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6821:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6821:18:10"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6841:34:10",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6814:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6814:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6814:62:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6885:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6897:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6908:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6893:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6893:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6885:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6712:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6726:4:10",
                "type": ""
              }
            ],
            "src": "6561:356:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7096:227:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7113:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7124:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7106:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7106:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7106:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7147:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7158:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7143:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7143:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7163:2:10",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7136:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7136:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7136:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7186:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7197:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7182:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7182:18:10"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7202:34:10",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7175:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7175:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7175:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7257:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7268:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7253:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7253:18:10"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7273:7:10",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7246:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7246:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7246:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7290:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7302:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7313:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7298:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7298:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7290:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7073:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7087:4:10",
                "type": ""
              }
            ],
            "src": "6922:401:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7502:175:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7519:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7530:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7512:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7512:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7512:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7553:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7564:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7549:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7549:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7569:2:10",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7542:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7542:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7542:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7592:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7603:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7588:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7588:18:10"
                      },
                      {
                        "hexValue": "474f4c445f434c41494d45445f464f525f544f4b454e5f4944",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7608:27:10",
                        "type": "",
                        "value": "GOLD_CLAIMED_FOR_TOKEN_ID"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7581:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7581:55:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7581:55:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7645:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7657:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7668:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7653:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7653:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7645:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c0a1c64304d6fbc8fce182b54883539f85cafcf014cbf22e5bc1c54f49ba9890__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7479:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7493:4:10",
                "type": ""
              }
            ],
            "src": "7328:349:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7856:226:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7873:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7884:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7866:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7866:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7866:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7907:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7918:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7903:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7903:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7923:2:10",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7896:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7896:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7896:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7946:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7957:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7942:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7942:18:10"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7962:34:10",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7935:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7935:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7935:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8017:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8028:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8013:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8013:18:10"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8033:6:10",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8006:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8006:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8006:34:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8049:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8061:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8072:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8057:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8057:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8049:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7833:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7847:4:10",
                "type": ""
              }
            ],
            "src": "7682:400:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8261:171:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8278:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8289:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8271:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8271:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8271:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8312:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8323:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8308:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8308:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8328:2:10",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8301:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8301:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8301:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8351:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8362:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8347:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8347:18:10"
                      },
                      {
                        "hexValue": "544f4b454e5f49445f4f55545f4f465f52414e4745",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8367:23:10",
                        "type": "",
                        "value": "TOKEN_ID_OUT_OF_RANGE"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8340:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8340:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8340:51:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8400:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8412:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8423:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8408:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8408:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8400:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d1856cd0a1a1c8ab5e0b679a357c7cad76b58222659bb0b7bee1ce9a1b5506e1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8238:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8252:4:10",
                "type": ""
              }
            ],
            "src": "8087:345:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8611:165:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8628:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8639:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8621:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8621:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8621:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8662:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8673:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8658:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8658:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8678:2:10",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8651:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8651:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8651:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8701:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8712:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8697:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8697:18:10"
                      },
                      {
                        "hexValue": "4e4f5f544f4b454e535f4f574e4544",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8717:17:10",
                        "type": "",
                        "value": "NO_TOKENS_OWNED"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8690:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8690:45:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8690:45:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8744:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8756:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8767:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8752:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8752:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8744:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8588:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8602:4:10",
                "type": ""
              }
            ],
            "src": "8437:339:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8955:227:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8972:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8983:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8965:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8965:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8965:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9006:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9017:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9002:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9002:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9022:2:10",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8995:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8995:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8995:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9045:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9056:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9041:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9041:18:10"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9061:34:10",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9034:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9034:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9034:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9116:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9127:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9112:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9112:18:10"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9132:7:10",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9105:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9105:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9105:35:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9149:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9161:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9172:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9157:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9157:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9149:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8932:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8946:4:10",
                "type": ""
              }
            ],
            "src": "8781:401:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9361:181:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9378:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9389:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9371:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9371:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9371:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9412:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9423:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9408:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9408:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9428:2:10",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9401:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9401:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9401:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9451:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9462:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9447:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9447:18:10"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9467:33:10",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9440:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9440:61:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9440:61:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9510:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9522:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9533:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9518:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9518:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9510:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9338:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9352:4:10",
                "type": ""
              }
            ],
            "src": "9187:355:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9648:76:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9658:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9670:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9681:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9666:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9666:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9658:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9700:9:10"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9711:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9693:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9693:25:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9693:25:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9617:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9628:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9639:4:10",
                "type": ""
              }
            ],
            "src": "9547:177:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9826:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9836:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9848:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9859:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9844:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9844:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9836:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9878:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9893:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9901:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9889:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9889:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9871:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9871:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9871:36:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9795:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9806:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9817:4:10",
                "type": ""
              }
            ],
            "src": "9729:184:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9966:80:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9993:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9995:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9995:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9995:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9982:1:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9989:1:10"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9985:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9985:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9979:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9979:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "9976:39:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10024:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10035:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10038:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10031:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10031:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10024:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9949:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9952:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9958:3:10",
                "type": ""
              }
            ],
            "src": "9918:128:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10115:358:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10125:16:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10140:1:10",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "10129:7:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10150:16:10",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "10159:7:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10150:5:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10175:13:10",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "10183:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "10175:4:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10239:228:10",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10284:22:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "10286:16:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10286:18:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10286:18:10"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10259:4:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10273:1:10",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "10269:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10269:6:10"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "10277:4:10"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "10265:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10265:17:10"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "10256:2:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10256:27:10"
                        },
                        "nodeType": "YulIf",
                        "src": "10253:53:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10345:29:10",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10347:25:10",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "10360:5:10"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "10367:4:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10356:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10356:16:10"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "10347:5:10"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10326:8:10"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "10336:7:10"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10322:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10322:22:10"
                        },
                        "nodeType": "YulIf",
                        "src": "10319:55:10"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10387:23:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10399:4:10"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10405:4:10"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "10395:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10395:15:10"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "10387:4:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10423:34:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "10439:7:10"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10448:8:10"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "10435:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10435:22:10"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "10423:8:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10208:8:10"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "10218:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10205:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10205:21:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10227:3:10",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10201:3:10",
                    "statements": []
                  },
                  "src": "10197:270:10"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "10079:5:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10086:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10099:5:10",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10106:4:10",
                "type": ""
              }
            ],
            "src": "10051:422:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10546:72:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10556:56:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10586:4:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "10596:8:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10606:4:10",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10592:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10592:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "10565:20:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10565:47:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10556:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10517:4:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10523:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10536:5:10",
                "type": ""
              }
            ],
            "src": "10478:140:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10682:747:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10720:52:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10734:10:10",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10743:1:10",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10734:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10757:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10702:8:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10695:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10695:16:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10692:80:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10805:52:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10819:10:10",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10828:1:10",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10819:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10842:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10791:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10784:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10784:12:10"
                  },
                  "nodeType": "YulIf",
                  "src": "10781:76:10"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10893:52:10",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10907:10:10",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10916:1:10",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10907:5:10"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10930:5:10"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10886:59:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10891:1:10",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10961:123:10",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10996:22:10",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "10998:16:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10998:18:10"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10998:18:10"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10981:8:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10991:3:10",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10978:2:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10978:17:10"
                            },
                            "nodeType": "YulIf",
                            "src": "10975:43:10"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "11031:25:10",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "11044:8:10"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11054:1:10",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11040:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11040:16:10"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "11031:5:10"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "11069:5:10"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10954:130:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10959:1:10",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "10873:4:10"
                  },
                  "nodeType": "YulSwitch",
                  "src": "10866:218:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11182:70:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11196:28:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11209:4:10"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11215:8:10"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "11205:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11205:19:10"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "11196:5:10"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "11237:5:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "11106:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11112:2:10",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11103:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11103:12:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "11120:8:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11130:2:10",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11117:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11117:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11099:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11099:35:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "11143:4:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11149:3:10",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11140:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11140:13:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "11158:8:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11168:2:10",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11155:2:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11155:16:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11136:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11136:36:10"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "11096:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11096:77:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11093:159:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11261:57:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11303:4:10"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11309:8:10"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "11284:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11284:34:10"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "11265:7:10",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "11274:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11363:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11365:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11365:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11365:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "11333:7:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11350:1:10",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "11346:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11346:6:10"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "11354:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "11342:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11342:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11330:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11330:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11327:58:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11394:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "11407:7:10"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "11416:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11403:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11403:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11394:5:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10653:4:10",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10659:8:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10672:5:10",
                "type": ""
              }
            ],
            "src": "10623:806:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11486:116:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11545:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11547:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11547:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11547:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11517:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11510:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11510:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "11503:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11503:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11525:1:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11536:1:10",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11532:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11532:6:10"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "11540:1:10"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "11528:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11528:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "11522:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11522:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11499:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11499:45:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11496:71:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11576:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11591:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11594:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11587:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11587:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "11576:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11465:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11468:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "11474:7:10",
                "type": ""
              }
            ],
            "src": "11434:168:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11662:325:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11672:22:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11686:1:10",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11689:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "11682:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11682:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "11672:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11703:38:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11733:4:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11739:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11729:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11729:12:10"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "11707:18:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11780:31:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11782:27:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "11796:6:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11804:4:10",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11792:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11792:17:10"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11782:6:10"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11760:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11753:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11753:26:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11750:61:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11870:111:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11891:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11898:3:10",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11903:10:10",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11894:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11894:20:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11884:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11884:31:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11884:31:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11935:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11938:4:10",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11928:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11928:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11928:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11963:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11966:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11956:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11956:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11956:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11826:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11849:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11857:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11846:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11846:14:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11823:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11823:38:10"
                  },
                  "nodeType": "YulIf",
                  "src": "11820:161:10"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "11642:4:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11651:6:10",
                "type": ""
              }
            ],
            "src": "11607:380:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12039:88:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12070:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12072:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12072:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12072:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12055:5:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12066:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12062:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12062:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "12052:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12052:17:10"
                  },
                  "nodeType": "YulIf",
                  "src": "12049:43:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12101:20:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12112:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12119:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12108:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12108:13:10"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "12101:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12021:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "12031:3:10",
                "type": ""
              }
            ],
            "src": "11992:135:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12164:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12181:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12188:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12193:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12184:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12184:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12174:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12174:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12174:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12221:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12224:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12214:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12214:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12214:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12245:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12248:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12238:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12238:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12238:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12132:127:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12309:86:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12373:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12382:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12385:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12375:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12375:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12375:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12332:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12343:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12358:3:10",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12363:1:10",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "12354:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12354:11:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12367:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "12350:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12350:19:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12339:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12339:31:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12329:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12329:42:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12322:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12322:50:10"
                  },
                  "nodeType": "YulIf",
                  "src": "12319:70:10"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12298:5:10",
                "type": ""
              }
            ],
            "src": "12264:131:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC721Enumerable_$4225__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_13cd002bc56c1623555285bb5c785ffb4ff56df7efcae284e655f265eccb4fd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"INDEX_OUT_OF_RANGE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5be89d048efec085fee54cd2df8b23477ce16bb1f2d36ec34719f0588b00139d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"MUST_OWN_TOKEN_ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c0a1c64304d6fbc8fce182b54883539f85cafcf014cbf22e5bc1c54f49ba9890__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"GOLD_CLAIMED_FOR_TOKEN_ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d1856cd0a1a1c8ab5e0b679a357c7cad76b58222659bb0b7bee1ce9a1b5506e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"TOKEN_ID_OUT_OF_RANGE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"NO_TOKENS_OWNED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "807:8681:0:-:0;;;972:87;;;-1:-1:-1;;;;;;972:87:0;1017:42;972:87;;;1238:10;3103:2:3;;3021:91;1238:10:0;1234:14;;:2;:14;:::i;:::-;1225:24;;:5;:24;:::i;:::-;1184:65;;1555:1;1525:31;;1877:4;1849:32;;2017:1;1993:25;;2248:390;;;;;;;;;;1906:113:3;;;;;;;;;;;;;-1:-1:-1;;;1906:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1906:113:3;;;867:23:2;877:12;:10;;;:12;;:::i;:::-;867:9;:23::i;:::-;1972:13:3;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1995:17:3;;;;:7;;:17;;;;;:::i;:::-;;1906:113;;2507:61:0::2;2525:42;2507:17;;;:61;;:::i;:::-;2611:19;::::0;2578:12:::2;:53:::0;;-1:-1:-1;;;;;;2578:53:0::2;-1:-1:-1::0;;;;;2611:19:0;;::::2;2578:53:::0;;;::::2;::::0;;807:8681;;587:96:8;666:10;;587:96::o;2041:169:2:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;1846:189::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:8;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;623:2:10;1177:68:2;;;605:21:10;;;642:18;;;635:30;701:34;681:18;;;674:62;753:18;;1177:68:2;;;;;;;;;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;216:2:10;1926:73:2::1;::::0;::::1;198:21:10::0;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:10;;;338:36;391:19;;1926:73:2::1;14:402:10::0;1926:73:2::1;2009:19;2019:8:::0;2009:9:::1;:19::i;:::-;1846:189:::0;:::o;807:8681:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;807:8681:0;;;-1:-1:-1;807:8681:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;782:422:10;871:1;914:5;871:1;928:270;949:7;939:8;936:21;928:270;;;1008:4;1004:1;1000:6;996:17;990:4;987:27;984:53;;;1017:18;;:::i;:::-;1067:7;1057:8;1053:22;1050:55;;;1087:16;;;;1050:55;1166:22;;;;1126:15;;;;928:270;;;932:3;782:422;;;;;:::o;1209:140::-;1267:5;1296:47;1337:4;1327:8;1323:19;1317:4;1296:47;:::i;:::-;1287:56;1209:140;-1:-1:-1;;;1209:140:10:o;1354:806::-;1403:5;1433:8;1423:80;;-1:-1:-1;1474:1:10;1488:5;;1423:80;1522:4;1512:76;;-1:-1:-1;1559:1:10;1573:5;;1512:76;1604:4;1622:1;1617:59;;;;1690:1;1685:130;;;;1597:218;;1617:59;1647:1;1638:10;;1661:5;;;1685:130;1722:3;1712:8;1709:17;1706:43;;;1729:18;;:::i;:::-;-1:-1:-1;;1785:1:10;1771:16;;1800:5;;1597:218;;1899:2;1889:8;1886:16;1880:3;1874:4;1871:13;1867:36;1861:2;1851:8;1848:16;1843:2;1837:4;1834:12;1830:35;1827:77;1824:159;;;-1:-1:-1;1936:19:10;;;1968:5;;1824:159;2015:34;2040:8;2034:4;2015:34;:::i;:::-;2085:6;2081:1;2077:6;2073:19;2064:7;2061:32;2058:58;;;2096:18;;:::i;:::-;2134:20;;-1:-1:-1;1354:806:10;;;;;:::o;2165:168::-;2205:7;2271:1;2267;2263:6;2259:14;2256:1;2253:21;2248:1;2241:9;2234:17;2230:45;2227:71;;;2278:18;;:::i;:::-;-1:-1:-1;2318:9:10;;2165:168::o;2338:380::-;2417:1;2413:12;;;;2460;;;2481:61;;2535:4;2527:6;2523:17;2513:27;;2481:61;2588:2;2580:6;2577:14;2557:18;2554:38;2551:161;;;2634:10;2629:3;2625:20;2622:1;2615:31;2669:4;2666:1;2659:15;2697:4;2694:1;2687:15;2551:161;;2338:380;;;:::o;2723:127::-;2784:10;2779:3;2775:20;2772:1;2765:31;2815:4;2812:1;2805:15;2839:4;2836:1;2829:15;2723:127;807:8681:0;;;;;;",
  "deployedSourceMap": "807:8681:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;:::i;:::-;;:::i;:::-;;;2975:14:10;;2968:22;2950:41;;2938:2;2923:18;4181:166:3;2810:187:10;3172:106:3;3259:12;;3172:106;;;9693:25:10;;;9681:2;9666:18;3172:106:3;9547:177:10;9241:245:0;;;;;;:::i;:::-;;:::i;:::-;;4814:478:3;;;;;;:::i;:::-;;:::i;1525:31:0:-;;;;;;3021:91:3;;;3103:2;9871:36:10;;9859:2;9844:18;3021:91:3;9729:184:10;8151:198:0;;;;;;:::i;:::-;;:::i;6803:226::-;;;;;;:::i;:::-;;:::i;1065:37::-;;;;;-1:-1:-1;;;;;1065:37:0;;;;;;-1:-1:-1;;;;;2487:32:10;;;2469:51;;2457:2;2442:18;1065:37:0;2323:203:10;5687:212:3;;;;;;:::i;:::-;;:::i;7695:89:0:-;;;;;;:::i;:::-;;:::i;1849:32::-;;;;;;7363:190;;;;;;:::i;:::-;;:::i;6446:134::-;;;;;;:::i;:::-;;:::i;3336:125:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3436:18:3;3410:7;3436:18;;;:9;:18;;;;;;;3336:125;1605:92:2;;;:::i;1184:65:0:-;;;;;;4378:863;;;;;;:::i;:::-;;:::i;973:85:2:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;973:85;;2295:102:3;;;:::i;6386:405::-;;;;;;:::i;:::-;;:::i;972:87:0:-;;;;;-1:-1:-1;;;;;972:87:0;;;3664:172:3;;;;;;:::i;:::-;;:::i;2752:510:0:-;;;;;;:::i;:::-;;:::i;1993:25::-;;;;;;3526:511;;;:::i;3894:149:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:3;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;2167:74:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1846:189:2;;;;;;:::i;:::-;;:::i;2084:98:3:-;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;666:10:8;4303:7:3;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:3;4181:166;;;;;:::o;9241:245:0:-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:8;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;;;;;;;;;9392:21:0::1;9405:7;9392:12;:21::i;:::-;9423:56;9453:25;9423:29;:56::i;:::-;9241:245:::0;;:::o;4814:478:3:-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:3;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:8;5040:33:3;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;5083:79:3;;6354:2:10;5083:79:3;;;6336:21:10;6393:2;6373:18;;;6366:30;6432:34;6412:18;;;6405:62;-1:-1:-1;;;6483:18:10;;;6476:38;6531:19;;5083:79:3;6152:404:10;5083:79:3;5196:57;5205:6;666:10:8;5246:6:3;5227:16;:25;5196:8;:57::i;:::-;-1:-1:-1;5281:4:3;;4814:478;-1:-1:-1;;;;4814:478:3:o;8151:198:0:-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:8;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;8327:14:0::1;3103:2:3::0;8327::0::1;:14;:::i;:::-;8298:44;::::0;:25;:44:::1;:::i;:::-;8272:23;:70:::0;-1:-1:-1;8151:198:0:o;6803:226::-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:8;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;6917:19:0::1;:42:::0;;-1:-1:-1;;;;;6917:42:0;;::::1;-1:-1:-1::0;;;;;;6917:42:0;;::::1;::::0;::::1;::::0;;;6969:12:::1;:53:::0;;;;::::1;;::::0;;6803:226::o;5687:212:3:-;666:10:8;5775:4:3;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:3;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;7695:89:0:-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:8;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;7761:6:0::1;:16:::0;7695:89::o;7363:190::-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:8;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;7484:12:0::1;:28:::0;;;;7522:10:::1;:24:::0;7363:190::o;6446:134::-;1019:7:2;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:8;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;6520:53:0::1;6526:7;1019::2::0;1045:6;-1:-1:-1;;;;;1045:6:2;;973:85;6526:7:0::1;6557:14;3103:2:3::0;6557::0::1;:14;:::i;:::-;6535:37;::::0;:18;:37:::1;:::i;:::-;6520:5;:53::i;:::-;6446:134:::0;:::o;1605:92:2:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:8;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;4378:863:0:-;4513:12;;4485:25;;-1:-1:-1;;;;;4513:12:0;:22;666:10:8;4513:36:0;;-1:-1:-1;;;;;;4513:36:0;;;;;;;-1:-1:-1;;;;;2487:32:10;;;4513:36:0;;;2469:51:10;2442:18;;4513:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4485:64;;4606:1;4586:17;:21;4578:49;;;;-1:-1:-1;;;4578:49:0;;8639:2:10;4578:49:0;;;8621:21:10;8678:2;8658:18;;;8651:30;-1:-1:-1;;;8697:18:10;;;8690:45;8752:18;;4578:49:0;8437:339:10;4578:49:0;4848:17;4832:13;:33;4787:122;;;;-1:-1:-1;;;4787:122:0;;4444:2:10;4787:122:0;;;4426:21:10;4483:2;4463:18;;;4456:30;-1:-1:-1;;;4502:18:10;;;4495:48;4560:18;;4787:122:0;4242:342:10;4787:122:0;4937:15;4920:315;4958:13;4954:1;:17;4920:315;;;5131:12;;5107:117;;-1:-1:-1;;;;;5131:12:0;:32;666:10:8;5164:12:0;5131:49;;-1:-1:-1;;;;;;5131:49:0;;;;;;;-1:-1:-1;;;;;2723:32:10;;;5131:49:0;;;2705:51:10;2772:18;;;2765:34;;;2678:18;;5131:49:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;666:10:8;5107:6:0;:117::i;:::-;4973:3;;;;:::i;:::-;;;;4920:315;;;;4475:766;4378:863;;:::o;2295:102:3:-;2351:13;2383:7;2376:14;;;;;:::i;6386:405::-;666:10:8;6479:4:3;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:3;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;6566:85:3;;8983:2:10;6566:85:3;;;8965:21:10;9022:2;9002:18;;;8995:30;9061:34;9041:18;;;9034:62;-1:-1:-1;;;9112:18:10;;;9105:35;9157:19;;6566:85:3;8781:401:10;6566:85:3;6685:67;666:10:8;6708:7:3;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:3;;6386:405;-1:-1:-1;;;6386:405:3:o;3664:172::-;3750:4;3766:42;666:10:8;3790:9:3;3801:6;3766:9;:42::i;2752:510:0:-;3036:12;;:29;;-1:-1:-1;;;3036:29:0;;;;;9693:25:10;;;-1:-1:-1;;;;;3036:12:0;;;;:20;;9666:18:10;;3036:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3020:45:0;666:10:8;-1:-1:-1;;;;;3020:45:0;;2999:109;;;;-1:-1:-1;;;2999:109:0;;6008:2:10;2999:109:0;;;5990:21:10;6047:2;6027:18;;;6020:30;-1:-1:-1;;;6066:18:10;;;6059:47;6123:18;;2999:109:0;5806:341:10;2999:109:0;3226:29;3233:7;666:10:8;5107:6:0;:117::i;3526:511::-;3601:12;;3573:25;;-1:-1:-1;;;;;3601:12:0;:22;666:10:8;3601:36:0;;-1:-1:-1;;;;;;3601:36:0;;;;;;;-1:-1:-1;;;;;2487:32:10;;;3601:36:0;;;2469:51:10;2442:18;;3601:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3573:64;;3694:1;3674:17;:21;3666:49;;;;-1:-1:-1;;;3666:49:0;;8639:2:10;3666:49:0;;;8621:21:10;8678:2;8658:18;;;8651:30;-1:-1:-1;;;8697:18:10;;;8690:45;8752:18;;3666:49:0;8437:339:10;3666:49:0;3731:9;3726:305;3750:17;3746:1;:21;3726:305;;;3927:12;;3903:117;;-1:-1:-1;;;;;3927:12:0;:32;666:10:8;3960:12:0;587:96:8;3903:117:0;3769:3;;;;:::i;:::-;;;;3726:305;;1846:189:2;1019:7;1045:6;-1:-1:-1;;;;;1045:6:2;666:10:8;1185:23:2;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:2;;4791:2:10;1926:73:2::1;::::0;::::1;4773:21:10::0;4830:2;4810:18;;;4803:30;4869:34;4849:18;;;4842:62;-1:-1:-1;;;4920:18:10;;;4913:36;4966:19;;1926:73:2::1;4589:402:10::0;1926:73:2::1;2009:19;2019:8;2009:9;:19::i;9962:370:3:-:0;-1:-1:-1;;;;;10093:19:3;;10085:68;;;;-1:-1:-1;;;10085:68:3;;7884:2:10;10085:68:3;;;7866:21:10;7923:2;7903:18;;;7896:30;7962:34;7942:18;;;7935:62;-1:-1:-1;;;8013:18:10;;;8006:34;8057:19;;10085:68:3;7682:400:10;10085:68:3;-1:-1:-1;;;;;10171:21:3;;10163:68;;;;-1:-1:-1;;;10163:68:3;;5198:2:10;10163:68:3;;;5180:21:10;5237:2;5217:18;;;5210:30;5276:34;5256:18;;;5249:62;-1:-1:-1;;;5327:18:10;;;5320:32;5369:19;;10163:68:3;4996:398:10;10163:68:3;-1:-1:-1;;;;;10242:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;9693:25:10;;;10293:32:3;;9666:18:10;10293:32:3;;;;;;;9962:370;;;:::o;7265:713::-;-1:-1:-1;;;;;7400:20:3;;7392:70;;;;-1:-1:-1;;;7392:70:3;;7124:2:10;7392:70:3;;;7106:21:10;7163:2;7143:18;;;7136:30;7202:34;7182:18;;;7175:62;-1:-1:-1;;;7253:18:10;;;7246:35;7298:19;;7392:70:3;6922:401:10;7392:70:3;-1:-1:-1;;;;;7480:23:3;;7472:71;;;;-1:-1:-1;;;7472:71:3;;4040:2:10;7472:71:3;;;4022:21:10;4079:2;4059:18;;;4052:30;4118:34;4098:18;;;4091:62;-1:-1:-1;;;4169:18:10;;;4162:33;4212:19;;7472:71:3;3838:399:10;7472:71:3;-1:-1:-1;;;;;7636:17:3;;7612:21;7636:17;;;:9;:17;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;7663:74:3;;5601:2:10;7663:74:3;;;5583:21:10;5640:2;5620:18;;;5613:30;5679:34;5659:18;;;5652:62;-1:-1:-1;;;5730:18:10;;;5723:36;5776:19;;7663:74:3;5399:402:10;7663:74:3;-1:-1:-1;;;;;7771:17:3;;;;;;;:9;:17;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:17;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:3;7888:6;-1:-1:-1;;;;;7879:35:3;;7907:6;7879:35;;;;9693:25:10;;9681:2;9666:18;;9547:177;7879:35:3;;;;;;;;7925:46;10916:121;8254:389;-1:-1:-1;;;;;8337:21:3;;8329:65;;;;-1:-1:-1;;;8329:65:3;;9389:2:10;8329:65:3;;;9371:21:10;9428:2;9408:18;;;9401:30;9467:33;9447:18;;;9440:61;9518:18;;8329:65:3;9187:355:10;8329:65:3;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8497:18:3;;;;;;:9;:18;;;;;:28;;8519:6;;8497:18;:28;;8519:6;;8497:28;:::i;:::-;;;;-1:-1:-1;;8540:37:3;;9693:25:10;;;-1:-1:-1;;;;;8540:37:3;;;8557:1;;8540:37;;9681:2:10;9666:18;8540:37:3;;;;;;;9241:245:0;;:::o;2041:169:2:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;5305:810:0:-;5474:12;;5463:7;:23;;:48;;;;;5501:10;;5490:7;:21;;5463:48;5442:116;;;;-1:-1:-1;;;5442:116:0;;8289:2:10;5442:116:0;;;8271:21:10;8328:2;8308:18;;;8301:30;-1:-1:-1;;;8347:18:10;;;8340:51;8408:18;;5442:116:0;8087:345:10;5442:116:0;5724:6;;5701:30;;;;:22;:30;;;;;;;;:39;;;;;;;;;;;5700:40;5679:112;;;;-1:-1:-1;;;5679:112:0;;7530:2:10;5679:112:0;;;7512:21:10;7569:2;7549:18;;;7542:30;7608:27;7588:18;;;7581:55;7653:18;;5679:112:0;7328:349:10;5679:112:0;5947:6;;5924:30;;;;:22;:30;;;;;;;;:39;;;;;;;;:46;;-1:-1:-1;;5924:46:0;5966:4;5924:46;;;6084:23;;6066:42;;6072:10;;6066:5;:42::i;14:247:10:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;14:247;-1:-1:-1;;;14:247:10:o;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:52;;;405:1;402;395:12;357:52;437:9;431:16;456:31;481:5;456:31;:::i;522:388::-;590:6;598;651:2;639:9;630:7;626:23;622:32;619:52;;;667:1;664;657:12;619:52;706:9;693:23;725:31;750:5;725:31;:::i;:::-;775:5;-1:-1:-1;832:2:10;817:18;;804:32;845:33;804:32;845:33;:::i;:::-;897:7;887:17;;;522:388;;;;;:::o;915:456::-;992:6;1000;1008;1061:2;1049:9;1040:7;1036:23;1032:32;1029:52;;;1077:1;1074;1067:12;1029:52;1116:9;1103:23;1135:31;1160:5;1135:31;:::i;:::-;1185:5;-1:-1:-1;1242:2:10;1227:18;;1214:32;1255:33;1214:32;1255:33;:::i;:::-;915:456;;1307:7;;-1:-1:-1;;;1361:2:10;1346:18;;;;1333:32;;915:456::o;1376:315::-;1444:6;1452;1505:2;1493:9;1484:7;1480:23;1476:32;1473:52;;;1521:1;1518;1511:12;1473:52;1560:9;1547:23;1579:31;1604:5;1579:31;:::i;:::-;1629:5;1681:2;1666:18;;;;1653:32;;-1:-1:-1;;;1376:315:10:o;1696:180::-;1755:6;1808:2;1796:9;1787:7;1783:23;1779:32;1776:52;;;1824:1;1821;1814:12;1776:52;-1:-1:-1;1847:23:10;;1696:180;-1:-1:-1;1696:180:10:o;1881:184::-;1951:6;2004:2;1992:9;1983:7;1979:23;1975:32;1972:52;;;2020:1;2017;2010:12;1972:52;-1:-1:-1;2043:16:10;;1881:184;-1:-1:-1;1881:184:10:o;2070:248::-;2138:6;2146;2199:2;2187:9;2178:7;2174:23;2170:32;2167:52;;;2215:1;2212;2205:12;2167:52;-1:-1:-1;;2238:23:10;;;2308:2;2293:18;;;2280:32;;-1:-1:-1;2070:248:10:o;3236:597::-;3348:4;3377:2;3406;3395:9;3388:21;3438:6;3432:13;3481:6;3476:2;3465:9;3461:18;3454:34;3506:1;3516:140;3530:6;3527:1;3524:13;3516:140;;;3625:14;;;3621:23;;3615:30;3591:17;;;3610:2;3587:26;3580:66;3545:10;;3516:140;;;3674:6;3671:1;3668:13;3665:91;;;3744:1;3739:2;3730:6;3719:9;3715:22;3711:31;3704:42;3665:91;-1:-1:-1;3817:2:10;3796:15;-1:-1:-1;;3792:29:10;3777:45;;;;3824:2;3773:54;;3236:597;-1:-1:-1;;;3236:597:10:o;6561:356::-;6763:2;6745:21;;;6782:18;;;6775:30;6841:34;6836:2;6821:18;;6814:62;6908:2;6893:18;;6561:356::o;9918:128::-;9958:3;9989:1;9985:6;9982:1;9979:13;9976:39;;;9995:18;;:::i;:::-;-1:-1:-1;10031:9:10;;9918:128::o;10051:422::-;10140:1;10183:5;10140:1;10197:270;10218:7;10208:8;10205:21;10197:270;;;10277:4;10273:1;10269:6;10265:17;10259:4;10256:27;10253:53;;;10286:18;;:::i;:::-;10336:7;10326:8;10322:22;10319:55;;;10356:16;;;;10319:55;10435:22;;;;10395:15;;;;10197:270;;;10201:3;10051:422;;;;;:::o;10478:140::-;10536:5;10565:47;10606:4;10596:8;10592:19;10586:4;10672:5;10702:8;10692:80;;-1:-1:-1;10743:1:10;10757:5;;10692:80;10791:4;10781:76;;-1:-1:-1;10828:1:10;10842:5;;10781:76;10873:4;10891:1;10886:59;;;;10959:1;10954:130;;;;10866:218;;10886:59;10916:1;10907:10;;10930:5;;;10954:130;10991:3;10981:8;10978:17;10975:43;;;10998:18;;:::i;:::-;-1:-1:-1;;11054:1:10;11040:16;;11069:5;;10866:218;;11168:2;11158:8;11155:16;11149:3;11143:4;11140:13;11136:36;11130:2;11120:8;11117:16;11112:2;11106:4;11103:12;11099:35;11096:77;11093:159;;;-1:-1:-1;11205:19:10;;;11237:5;;11093:159;11284:34;11309:8;11303:4;11284:34;:::i;:::-;11354:6;11350:1;11346:6;11342:19;11333:7;11330:32;11327:58;;;11365:18;;:::i;:::-;11403:20;;10623:806;-1:-1:-1;;;10623:806:10:o;11434:168::-;11474:7;11540:1;11536;11532:6;11528:14;11525:1;11522:21;11517:1;11510:9;11503:17;11499:45;11496:71;;;11547:18;;:::i;:::-;-1:-1:-1;11587:9:10;;11434:168::o;11607:380::-;11686:1;11682:12;;;;11729;;;11750:61;;11804:4;11796:6;11792:17;11782:27;;11750:61;11857:2;11849:6;11846:14;11826:18;11823:38;11820:161;;;11903:10;11898:3;11894:20;11891:1;11884:31;11938:4;11935:1;11928:15;11966:4;11963:1;11956:15;11820:161;;11607:380;;;:::o;11992:135::-;12031:3;-1:-1:-1;;12052:17:10;;12049:43;;;12072:18;;:::i;:::-;-1:-1:-1;12119:1:10;12108:13;;11992:135::o;12132:127::-;12193:10;12188:3;12184:20;12181:1;12174:31;12224:4;12221:1;12214:15;12248:4;12245:1;12238:15;12264:131;-1:-1:-1;;;;;12339:31:10;;12329:42;;12319:70;;12385:1;12382;12375:12",
  "source": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\n\n/// @title Adventure Gold for Loot holders!\n/// @author Will Papper <https://twitter.com/WillPapper>\n/// @notice This contract mints Adventure Gold for Loot holders and provides\n/// administrative functions to the Loot DAO. It allows:\n/// * Loot holders to claim Adventure Gold\n/// * A DAO to set seasons for new opportunities to claim Adventure Gold\n/// * A DAO to mint Adventure Gold for use within the Loot ecosystem\n/// @custom:unaudited This contract has not been audited. Use at your own risk.\ncontract AdventureGold is Context, Ownable, ERC20 {\n    // Loot contract is available at https://etherscan.io/address/0xff9c1b15b16263c61d017ee9f65c50e4ae0113d7\n    address public lootContractAddress =\n        0xFF9C1b15B16263C61d017ee9F65C50e4AE0113D7;\n    IERC721Enumerable public lootContract;\n\n    // Give out 10,000 Adventure Gold for every Loot Bag that a user holds\n    uint256 public adventureGoldPerTokenId = 10000 * (10**decimals());\n\n    // tokenIdStart of 1 is based on the following lines in the Loot contract:\n    /** \n    function claim(uint256 tokenId) public nonReentrant {\n        require(tokenId > 0 && tokenId < 7778, \"Token ID invalid\");\n        _safeMint(_msgSender(), tokenId);\n    }\n    */\n    uint256 public tokenIdStart = 1;\n\n    // tokenIdEnd of 8000 is based on the following lines in the Loot contract:\n    /**\n        function ownerClaim(uint256 tokenId) public nonReentrant onlyOwner {\n        require(tokenId > 7777 && tokenId < 8001, \"Token ID invalid\");\n        _safeMint(owner(), tokenId);\n    }\n    */\n    uint256 public tokenIdEnd = 8000;\n\n    // Seasons are used to allow users to claim tokens regularly. Seasons are\n    // decided by the DAO.\n    uint256 public season = 0;\n\n    // Track claimed tokens within a season\n    // IMPORTANT: The format of the mapping is:\n    // claimedForSeason[season][tokenId][claimed]\n    mapping(uint256 => mapping(uint256 => bool)) public seasonClaimedByTokenId;\n\n    constructor() Ownable() ERC20(\"Adventure Gold\", \"AGLD\") {\n        // Transfer ownership to the Loot DAO\n        // Ownable by OpenZeppelin automatically sets owner to msg.sender, but\n        // we're going to be using a separate wallet for deployment\n        transferOwnership(0xcD814C83198C15A542F9A13FAf84D518d1744ED1);\n        lootContract = IERC721Enumerable(lootContractAddress);\n    }\n\n    /// @notice Claim Adventure Gold for a given Loot ID\n    /// @param tokenId The tokenId of the Loot NFT\n    function claimById(uint256 tokenId) external {\n        // Follow the Checks-Effects-Interactions pattern to prevent reentrancy\n        // attacks\n\n        // Checks\n\n        // Check that the msgSender owns the token that is being claimed\n        require(\n            _msgSender() == lootContract.ownerOf(tokenId),\n            \"MUST_OWN_TOKEN_ID\"\n        );\n\n        // Further Checks, Effects, and Interactions are contained within the\n        // _claim() function\n        _claim(tokenId, _msgSender());\n    }\n\n    /// @notice Claim Adventure Gold for all tokens owned by the sender\n    /// @notice This function will run out of gas if you have too much loot! If\n    /// this is a concern, you should use claimRangeForOwner and claim Adventure\n    /// Gold in batches.\n    function claimAllForOwner() external {\n        uint256 tokenBalanceOwner = lootContract.balanceOf(_msgSender());\n\n        // Checks\n        require(tokenBalanceOwner > 0, \"NO_TOKENS_OWNED\");\n\n        for (uint256 i = 0; i < tokenBalanceOwner; i++) {\n            // Further Checks, Effects, and Interactions are contained within\n            // the _claim() function\n            _claim(\n                lootContract.tokenOfOwnerByIndex(_msgSender(), i),\n                _msgSender()\n            );\n        }\n    }\n\n    /// @notice Claim Adventure Gold for all tokens owned by the sender within a\n    /// given range\n    /// @notice This function is useful if you own too much Loot to claim all at\n    /// once or if you want to leave some Loot unclaimed. If you leave Loot\n    /// unclaimed, however, you cannot claim it once the next season starts.\n    function claimRangeForOwner(uint256 ownerIndexStart, uint256 ownerIndexEnd)\n        external\n    {\n        uint256 tokenBalanceOwner = lootContract.balanceOf(_msgSender());\n\n        // Checks\n        require(tokenBalanceOwner > 0, \"NO_TOKENS_OWNED\");\n\n        // We use < for ownerIndexEnd and tokenBalanceOwner because\n        // tokenOfOwnerByIndex is 0-indexed while the token balance is 1-indexed\n        require(\n            ownerIndexStart >= 0 && ownerIndexEnd < tokenBalanceOwner,\n            \"INDEX_OUT_OF_RANGE\"\n        );\n\n        for (uint256 i = ownerIndexStart; i < ownerIndexEnd; i++) {\n            // Further Checks, Effects, and Interactions are contained within\n            // the _claim() function\n            _claim(\n                lootContract.tokenOfOwnerByIndex(_msgSender(), i),\n                _msgSender()\n            );\n        }\n    }\n\n    /// @dev Internal function to mint Loot upon claiming\n    function _claim(uint256 tokenId, address tokenOwner) internal {\n        // Checks\n        // Check that the token ID is in range\n        require(\n            tokenId >= tokenIdStart && tokenId <= tokenIdEnd,\n            \"TOKEN_ID_OUT_OF_RANGE\"\n        );\n\n        // Check that Adventure Gold have not already been claimed this season\n        // for a given tokenId\n        require(\n            !seasonClaimedByTokenId[season][tokenId],\n            \"GOLD_CLAIMED_FOR_TOKEN_ID\"\n        );\n\n        // Effects\n\n        // Mark that Adventure Gold has been claimed for this season for the\n        // given tokenId\n        seasonClaimedByTokenId[season][tokenId] = true;\n\n        // Interactions\n\n        // Send Adventure Gold to the owner of the token ID\n        _mint(tokenOwner, adventureGoldPerTokenId);\n    }\n\n    /// @notice Allows the DAO to mint new tokens for use within the Loot\n    /// Ecosystem\n    /// @param amountDisplayValue The amount of Loot to mint. This should be\n    /// input as the display value, not in raw decimals. If you want to mint\n    /// 100 Loot, you should enter \"100\" rather than the value of 100 * 10^18.\n    function daoMint(uint256 amountDisplayValue) external onlyOwner {\n        _mint(owner(), amountDisplayValue * (10**decimals()));\n    }\n\n    /// @notice Allows the DAO to set a new contract address for Loot. This is\n    /// relevant in the event that Loot migrates to a new contract.\n    /// @param lootContractAddress_ The new contract address for Loot\n    function daoSetLootContractAddress(address lootContractAddress_)\n        external\n        onlyOwner\n    {\n        lootContractAddress = lootContractAddress_;\n        lootContract = IERC721Enumerable(lootContractAddress);\n    }\n\n    /// @notice Allows the DAO to set the token IDs that are eligible to claim\n    /// Loot\n    /// @param tokenIdStart_ The start of the eligible token range\n    /// @param tokenIdEnd_ The end of the eligible token range\n    /// @dev This is relevant in case a future Loot contract has a different\n    /// total supply of Loot\n    function daoSetTokenIdRange(uint256 tokenIdStart_, uint256 tokenIdEnd_)\n        external\n        onlyOwner\n    {\n        tokenIdStart = tokenIdStart_;\n        tokenIdEnd = tokenIdEnd_;\n    }\n\n    /// @notice Allows the DAO to set a season for new Adventure Gold claims\n    /// @param season_ The season to use for claiming Loot\n    function daoSetSeason(uint256 season_) public onlyOwner {\n        season = season_;\n    }\n\n    /// @notice Allows the DAO to set the amount of Adventure Gold that is\n    /// claimed per token ID\n    /// @param adventureGoldDisplayValue The amount of Loot a user can claim.\n    /// This should be input as the display value, not in raw decimals. If you\n    /// want to mint 100 Loot, you should enter \"100\" rather than the value of\n    /// 100 * 10^18.\n    function daoSetAdventureGoldPerTokenId(uint256 adventureGoldDisplayValue)\n        public\n        onlyOwner\n    {\n        adventureGoldPerTokenId = adventureGoldDisplayValue * (10**decimals());\n    }\n\n    /// @notice Allows the DAO to set the season and Adventure Gold per token ID\n    /// in one transaction. This ensures that there is not a gap where a user\n    /// can claim more Adventure Gold than others\n    /// @param season_ The season to use for claiming loot\n    /// @param adventureGoldDisplayValue The amount of Loot a user can claim.\n    /// This should be input as the display value, not in raw decimals. If you\n    /// want to mint 100 Loot, you should enter \"100\" rather than the value of\n    /// 100 * 10^18.\n    /// @dev We would save a tiny amount of gas by modifying the season and\n    /// adventureGold variables directly. It is better practice for security,\n    /// however, to avoid repeating code. This function is so rarely used that\n    /// it's not worth moving these values into their own internal function to\n    /// skip the gas used on the modifier check.\n    function daoSetSeasonAndAdventureGoldPerTokenID(\n        uint256 season_,\n        uint256 adventureGoldDisplayValue\n    ) external onlyOwner {\n        daoSetSeason(season_);\n        daoSetAdventureGoldPerTokenId(adventureGoldDisplayValue);\n    }\n}\n",
  "sourcePath": "/Users/will/Dropbox/Syndicate/Development/AdventureGold/contracts/AdventureGold.sol",
  "ast": {
    "absolutePath": "/Users/will/Dropbox/Syndicate/Development/AdventureGold/contracts/AdventureGold.sol",
    "exportedSymbols": {
      "AdventureGold": [
        343
      ],
      "Context": [
        4247
      ],
      "ERC20": [
        3975
      ],
      "IERC165": [
        4259
      ],
      "IERC20": [
        4053
      ],
      "IERC20Metadata": [
        4078
      ],
      "IERC721": [
        4194
      ],
      "IERC721Enumerable": [
        4225
      ],
      "Ownable": [
        3429
      ]
    },
    "id": 344,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 3976,
        "src": "65:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 4248,
        "src": "121:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 3430,
        "src": "173:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 4226,
        "src": "226:79:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4247,
              "src": "833:7:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "833:7:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3429,
              "src": "842:7:0"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "842:7:0"
          },
          {
            "baseName": {
              "id": 11,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3975,
              "src": "851:5:0"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "851:5:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "307:500:0",
          "text": "@title Adventure Gold for Loot holders!\n @author Will Papper <https://twitter.com/WillPapper>\n @notice This contract mints Adventure Gold for Loot holders and provides\n administrative functions to the Loot DAO. It allows:\n * Loot holders to claim Adventure Gold\n * A DAO to set seasons for new opportunities to claim Adventure Gold\n * A DAO to mint Adventure Gold for use within the Loot ecosystem\n @custom:unaudited This contract has not been audited. Use at your own risk."
        },
        "fullyImplemented": true,
        "id": 343,
        "linearizedBaseContracts": [
          343,
          3975,
          4078,
          4053,
          3429,
          4247
        ],
        "name": "AdventureGold",
        "nameLocation": "816:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a8af32e9",
            "id": 15,
            "mutability": "mutable",
            "name": "lootContractAddress",
            "nameLocation": "987:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "972:87:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "972:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846463943316231354231363236334336316430313765653946363543353065344145303131334437",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1017:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xFF9C1b15B16263C61d017ee9F65C50e4AE0113D7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35b48afd",
            "id": 18,
            "mutability": "mutable",
            "name": "lootContract",
            "nameLocation": "1090:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1065:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
              "typeString": "contract IERC721Enumerable"
            },
            "typeName": {
              "id": 17,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16,
                "name": "IERC721Enumerable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4225,
                "src": "1065:17:0"
              },
              "referencedDeclaration": 4225,
              "src": "1065:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                "typeString": "contract IERC721Enumerable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "845f290d",
            "id": 27,
            "mutability": "mutable",
            "name": "adventureGoldPerTokenId",
            "nameLocation": "1199:23:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1184:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1184:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130303030",
                "id": 20,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1225:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000_by_1",
                  "typeString": "int_const 10000"
                },
                "value": "10000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1234:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3504,
                        "src": "1238:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                          "typeString": "function () view returns (uint8)"
                        }
                      },
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1238:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1234:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 25,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1233:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1225:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "1335:185:0",
              "text": "function claim(uint256 tokenId) public nonReentrant {\nrequire(tokenId > 0 && tokenId < 7778, \"Token ID invalid\");\n_safeMint(_msgSender(), tokenId);\n}"
            },
            "functionSelector": "2a389062",
            "id": 31,
            "mutability": "mutable",
            "name": "tokenIdStart",
            "nameLocation": "1540:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1525:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1525:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1555:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "1643:201:0",
              "text": "function ownerClaim(uint256 tokenId) public nonReentrant onlyOwner {\nrequire(tokenId > 7777 && tokenId < 8001, \"Token ID invalid\");\n_safeMint(owner(), tokenId);\n}"
            },
            "functionSelector": "43f42802",
            "id": 35,
            "mutability": "mutable",
            "name": "tokenIdEnd",
            "nameLocation": "1864:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1849:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1849:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38303030",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1877:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8000_by_1",
                "typeString": "int_const 8000"
              },
              "value": "8000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c50b0fb0",
            "id": 38,
            "mutability": "mutable",
            "name": "season",
            "nameLocation": "2008:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1993:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1993:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2017:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e5e808cb",
            "id": 44,
            "mutability": "mutable",
            "name": "seasonClaimedByTokenId",
            "nameLocation": "2219:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "2167:74:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 39,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2175:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2167:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 42,
                "keyType": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2194:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2186:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2205:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "2304:334:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307863443831344338333139384331354135343246394131334641663834443531386431373434454431",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xcD814C83198C15A542F9A13FAf84D518d1744ED1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 53,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3409,
                      "src": "2507:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2507:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:61:0"
                },
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "lootContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2578:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 59,
                          "name": "lootContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2611:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58,
                        "name": "IERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "2593:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$4225_$",
                          "typeString": "type(contract IERC721Enumerable)"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2593:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "src": "2578:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                      "typeString": "contract IERC721Enumerable"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:53:0"
                }
              ]
            },
            "id": 64,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 47,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3429,
                  "src": "2262:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2262:9:0"
              },
              {
                "arguments": [
                  {
                    "hexValue": "416476656e7475726520476f6c64",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2278:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b8d78d7845fb7b4fe6c4c966b0b69751dd75c725bff8e54e10239259b7e7027c",
                      "typeString": "literal_string \"Adventure Gold\""
                    },
                    "value": "Adventure Gold"
                  },
                  {
                    "hexValue": "41474c44",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2296:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ed83f534da0284531b0955bad54087d798fe33369a68d69d67ac1c0ef52ee52b",
                      "typeString": "literal_string \"AGLD\""
                    },
                    "value": "AGLD"
                  }
                ],
                "id": 51,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 48,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3975,
                  "src": "2272:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2272:31:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2259:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2304:0:0"
            },
            "scope": 343,
            "src": "2248:390:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "2797:465:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 71,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4237,
                            "src": "3020:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3020:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 75,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "3057:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 73,
                              "name": "lootContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "3036:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                                "typeString": "contract IERC721Enumerable"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4127,
                            "src": "3036:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3036:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3020:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4f574e5f544f4b454e5f4944",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3079:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5be89d048efec085fee54cd2df8b23477ce16bb1f2d36ec34719f0588b00139d",
                          "typeString": "literal_string \"MUST_OWN_TOKEN_ID\""
                        },
                        "value": "MUST_OWN_TOKEN_ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5be89d048efec085fee54cd2df8b23477ce16bb1f2d36ec34719f0588b00139d",
                          "typeString": "literal_string \"MUST_OWN_TOKEN_ID\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2999:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2999:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "2999:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "3233:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 83,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "3242:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3242:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 81,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "3226:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3226:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "3226:29:0"
                }
              ]
            },
            "documentation": {
              "id": 65,
              "nodeType": "StructuredDocumentation",
              "src": "2644:103:0",
              "text": "@notice Claim Adventure Gold for a given Loot ID\n @param tokenId The tokenId of the Loot NFT"
            },
            "functionSelector": "becf7741",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimById",
            "nameLocation": "2761:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2779:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "2771:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2770:17:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2797:0:0"
            },
            "scope": 343,
            "src": "2752:510:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "3563:474:0",
              "statements": [
                {
                  "assignments": [
                    93
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93,
                      "mutability": "mutable",
                      "name": "tokenBalanceOwner",
                      "nameLocation": "3581:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 130,
                      "src": "3573:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3573:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 96,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "3624:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3624:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 94,
                        "name": "lootContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "3601:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                          "typeString": "contract IERC721Enumerable"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4119,
                      "src": "3601:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3573:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101,
                          "name": "tokenBalanceOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "3674:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3694:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3674:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5f544f4b454e535f4f574e4544",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3697:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165",
                          "typeString": "literal_string \"NO_TOKENS_OWNED\""
                        },
                        "value": "NO_TOKENS_OWNED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165",
                          "typeString": "literal_string \"NO_TOKENS_OWNED\""
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3666:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3666:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "3666:49:0"
                },
                {
                  "body": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "3774:257:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 120,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4237,
                                    "src": "3960:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 121,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3960:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 122,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "3974:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 118,
                                  "name": "lootContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "3927:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                                    "typeString": "contract IERC721Enumerable"
                                  }
                                },
                                "id": 119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4216,
                                "src": "3927:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3927:49:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 124,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4237,
                                "src": "3994:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3994:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 117,
                            "name": "_claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "3903:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3903:117:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "3903:117:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 111,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "3746:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 112,
                      "name": "tokenBalanceOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "3750:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3746:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 129,
                  "initializationExpression": {
                    "assignments": [
                      108
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3739:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 129,
                        "src": "3731:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3731:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 110,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3743:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3731:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3769:3:0",
                      "subExpression": {
                        "id": 114,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3769:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116,
                    "nodeType": "ExpressionStatement",
                    "src": "3769:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3726:305:0"
                }
              ]
            },
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "3268:253:0",
              "text": "@notice Claim Adventure Gold for all tokens owned by the sender\n @notice This function will run out of gas if you have too much loot! If\n this is a concern, you should use claimRangeForOwner and claim Adventure\n Gold in batches."
            },
            "functionSelector": "cbf0b276",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAllForOwner",
            "nameLocation": "3535:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3551:2:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3563:0:0"
            },
            "scope": 343,
            "src": "3526:511:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "4475:766:0",
              "statements": [
                {
                  "assignments": [
                    140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 140,
                      "mutability": "mutable",
                      "name": "tokenBalanceOwner",
                      "nameLocation": "4493:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "4485:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4485:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 143,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "4536:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4536:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 141,
                        "name": "lootContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4513:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                          "typeString": "contract IERC721Enumerable"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4119,
                      "src": "4513:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4485:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 148,
                          "name": "tokenBalanceOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "4586:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4606:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4586:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5f544f4b454e535f4f574e4544",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4609:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165",
                          "typeString": "literal_string \"NO_TOKENS_OWNED\""
                        },
                        "value": "NO_TOKENS_OWNED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165",
                          "typeString": "literal_string \"NO_TOKENS_OWNED\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4578:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4578:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "4578:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 155,
                            "name": "ownerIndexStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "4808:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4827:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4808:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 158,
                            "name": "ownerIndexEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 136,
                            "src": "4832:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 159,
                            "name": "tokenBalanceOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "4848:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4832:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4808:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e4445585f4f55545f4f465f52414e4745",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4879:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13cd002bc56c1623555285bb5c785ffb4ff56df7efcae284e655f265eccb4fd6",
                          "typeString": "literal_string \"INDEX_OUT_OF_RANGE\""
                        },
                        "value": "INDEX_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13cd002bc56c1623555285bb5c785ffb4ff56df7efcae284e655f265eccb4fd6",
                          "typeString": "literal_string \"INDEX_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4787:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:122:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "4787:122:0"
                },
                {
                  "body": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "4978:257:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 178,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4237,
                                    "src": "5164:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5164:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 180,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 166,
                                  "src": "5178:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 176,
                                  "name": "lootContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "5131:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                                    "typeString": "contract IERC721Enumerable"
                                  }
                                },
                                "id": 177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4216,
                                "src": "5131:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5131:49:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 182,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4237,
                                "src": "5198:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5198:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 175,
                            "name": "_claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "5107:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5107:117:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "5107:117:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 169,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "4954:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 170,
                      "name": "ownerIndexEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "4958:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4954:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 187,
                  "initializationExpression": {
                    "assignments": [
                      166
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4933:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 187,
                        "src": "4925:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4925:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 168,
                    "initialValue": {
                      "id": 167,
                      "name": "ownerIndexStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "4937:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4925:27:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4973:3:0",
                      "subExpression": {
                        "id": 172,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "4973:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 174,
                    "nodeType": "ExpressionStatement",
                    "src": "4973:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4920:315:0"
                }
              ]
            },
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "4043:330:0",
              "text": "@notice Claim Adventure Gold for all tokens owned by the sender within a\n given range\n @notice This function is useful if you own too much Loot to claim all at\n once or if you want to leave some Loot unclaimed. If you leave Loot\n unclaimed, however, you cannot claim it once the next season starts."
            },
            "functionSelector": "878e7ea5",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRangeForOwner",
            "nameLocation": "4387:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "ownerIndexStart",
                  "nameLocation": "4414:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "4406:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4406:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "ownerIndexEnd",
                  "nameLocation": "4439:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "4431:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4431:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4405:48:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4475:0:0"
            },
            "scope": 343,
            "src": "4378:863:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "5367:748:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 198,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "5463:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 199,
                            "name": "tokenIdStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "5474:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5463:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 201,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "5490:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 202,
                            "name": "tokenIdEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "5501:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5490:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5463:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "544f4b454e5f49445f4f55545f4f465f52414e4745",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5525:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1856cd0a1a1c8ab5e0b679a357c7cad76b58222659bb0b7bee1ce9a1b5506e1",
                          "typeString": "literal_string \"TOKEN_ID_OUT_OF_RANGE\""
                        },
                        "value": "TOKEN_ID_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1856cd0a1a1c8ab5e0b679a357c7cad76b58222659bb0b7bee1ce9a1b5506e1",
                          "typeString": "literal_string \"TOKEN_ID_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5442:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5442:116:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "5442:116:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5700:40:0",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 209,
                              "name": "seasonClaimedByTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "5701:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                              }
                            },
                            "id": 211,
                            "indexExpression": {
                              "id": 210,
                              "name": "season",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "5724:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5701:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 213,
                          "indexExpression": {
                            "id": 212,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "5732:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5701:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "474f4c445f434c41494d45445f464f525f544f4b454e5f4944",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5754:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0a1c64304d6fbc8fce182b54883539f85cafcf014cbf22e5bc1c54f49ba9890",
                          "typeString": "literal_string \"GOLD_CLAIMED_FOR_TOKEN_ID\""
                        },
                        "value": "GOLD_CLAIMED_FOR_TOKEN_ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0a1c64304d6fbc8fce182b54883539f85cafcf014cbf22e5bc1c54f49ba9890",
                          "typeString": "literal_string \"GOLD_CLAIMED_FOR_TOKEN_ID\""
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5679:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5679:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "5679:112:0"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 218,
                          "name": "seasonClaimedByTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "5924:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 221,
                        "indexExpression": {
                          "id": 219,
                          "name": "season",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5947:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5924:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 222,
                      "indexExpression": {
                        "id": 220,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "5955:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5924:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5966:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5924:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "5924:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 227,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "6072:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 228,
                        "name": "adventureGoldPerTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "6084:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 226,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3835,
                      "src": "6066:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6066:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "6066:42:0"
                }
              ]
            },
            "documentation": {
              "id": 190,
              "nodeType": "StructuredDocumentation",
              "src": "5247:53:0",
              "text": "@dev Internal function to mint Loot upon claiming"
            },
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claim",
            "nameLocation": "5314:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5329:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "5321:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5321:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "5346:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "5338:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5320:37:0"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5367:0:0"
            },
            "scope": 343,
            "src": "5305:810:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "6510:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 241,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "6526:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6526:7:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 243,
                          "name": "amountDisplayValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "6535:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6557:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 245,
                                  "name": "decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3504,
                                  "src": "6561:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                    "typeString": "function () view returns (uint8)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6561:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "6557:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 248,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6556:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6535:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 240,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3835,
                      "src": "6520:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6520:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "6520:53:0"
                }
              ]
            },
            "documentation": {
              "id": 233,
              "nodeType": "StructuredDocumentation",
              "src": "6121:320:0",
              "text": "@notice Allows the DAO to mint new tokens for use within the Loot\n Ecosystem\n @param amountDisplayValue The amount of Loot to mint. This should be\n input as the display value, not in raw decimals. If you want to mint\n 100 Loot, you should enter \"100\" rather than the value of 100 * 10^18."
            },
            "functionSelector": "62759f6c",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 237,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "6500:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6500:9:0"
              }
            ],
            "name": "daoMint",
            "nameLocation": "6455:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "amountDisplayValue",
                  "nameLocation": "6471:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6463:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6462:28:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6510:0:0"
            },
            "scope": 343,
            "src": "6446:134:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "6907:122:0",
              "statements": [
                {
                  "expression": {
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 261,
                      "name": "lootContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "6917:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 262,
                      "name": "lootContractAddress_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "6939:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6917:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "6917:42:0"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 265,
                      "name": "lootContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "6969:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 267,
                          "name": "lootContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "7002:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 266,
                        "name": "IERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "6984:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$4225_$",
                          "typeString": "type(contract IERC721Enumerable)"
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6984:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "src": "6969:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                      "typeString": "contract IERC721Enumerable"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "6969:53:0"
                }
              ]
            },
            "documentation": {
              "id": 254,
              "nodeType": "StructuredDocumentation",
              "src": "6586:212:0",
              "text": "@notice Allows the DAO to set a new contract address for Loot. This is\n relevant in the event that Loot migrates to a new contract.\n @param lootContractAddress_ The new contract address for Loot"
            },
            "functionSelector": "32c88204",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 258,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "6893:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6893:9:0"
              }
            ],
            "name": "daoSetLootContractAddress",
            "nameLocation": "6812:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "lootContractAddress_",
                  "nameLocation": "6846:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "6838:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6838:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6837:30:0"
            },
            "returnParameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6907:0:0"
            },
            "scope": 343,
            "src": "6803:226:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "7474:79:0",
              "statements": [
                {
                  "expression": {
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 282,
                      "name": "tokenIdStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "7484:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 283,
                      "name": "tokenIdStart_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "7499:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7484:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "7484:28:0"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 286,
                      "name": "tokenIdEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "7522:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 287,
                      "name": "tokenIdEnd_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "7535:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7522:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "7522:24:0"
                }
              ]
            },
            "documentation": {
              "id": 273,
              "nodeType": "StructuredDocumentation",
              "src": "7035:323:0",
              "text": "@notice Allows the DAO to set the token IDs that are eligible to claim\n Loot\n @param tokenIdStart_ The start of the eligible token range\n @param tokenIdEnd_ The end of the eligible token range\n @dev This is relevant in case a future Loot contract has a different\n total supply of Loot"
            },
            "functionSelector": "4da7808a",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 280,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 279,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "7460:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7460:9:0"
              }
            ],
            "name": "daoSetTokenIdRange",
            "nameLocation": "7372:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "tokenIdStart_",
                  "nameLocation": "7399:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "7391:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7391:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "tokenIdEnd_",
                  "nameLocation": "7422:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "7414:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7414:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7390:44:0"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7474:0:0"
            },
            "scope": 343,
            "src": "7363:190:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "7751:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 299,
                      "name": "season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "7761:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 300,
                      "name": "season_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "7770:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7761:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "7761:16:0"
                }
              ]
            },
            "documentation": {
              "id": 292,
              "nodeType": "StructuredDocumentation",
              "src": "7559:131:0",
              "text": "@notice Allows the DAO to set a season for new Adventure Gold claims\n @param season_ The season to use for claiming Loot"
            },
            "functionSelector": "42e47315",
            "id": 304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 297,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 296,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "7741:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7741:9:0"
              }
            ],
            "name": "daoSetSeason",
            "nameLocation": "7704:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "season_",
                  "nameLocation": "7725:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "7717:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7717:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7716:17:0"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7751:0:0"
            },
            "scope": 343,
            "src": "7695:89:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "8262:87:0",
              "statements": [
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 312,
                      "name": "adventureGoldPerTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "8272:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 313,
                        "name": "adventureGoldDisplayValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "8298:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8327:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 315,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3504,
                                "src": "8331:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view returns (uint8)"
                                }
                              },
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8331:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "8327:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 318,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8326:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8298:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8272:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "8272:70:0"
                }
              ]
            },
            "documentation": {
              "id": 305,
              "nodeType": "StructuredDocumentation",
              "src": "7790:356:0",
              "text": "@notice Allows the DAO to set the amount of Adventure Gold that is\n claimed per token ID\n @param adventureGoldDisplayValue The amount of Loot a user can claim.\n This should be input as the display value, not in raw decimals. If you\n want to mint 100 Loot, you should enter \"100\" rather than the value of\n 100 * 10^18."
            },
            "functionSelector": "32565c49",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 309,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "8248:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8248:9:0"
              }
            ],
            "name": "daoSetAdventureGoldPerTokenId",
            "nameLocation": "8160:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "adventureGoldDisplayValue",
                  "nameLocation": "8198:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "8190:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8190:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8189:35:0"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8262:0:0"
            },
            "scope": 343,
            "src": "8151:198:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "9382:104:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 334,
                        "name": "season_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "9405:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 333,
                      "name": "daoSetSeason",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "9392:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9392:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "9392:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 338,
                        "name": "adventureGoldDisplayValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "9453:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 337,
                      "name": "daoSetAdventureGoldPerTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "9423:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9423:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "9423:56:0"
                }
              ]
            },
            "documentation": {
              "id": 324,
              "nodeType": "StructuredDocumentation",
              "src": "8355:881:0",
              "text": "@notice Allows the DAO to set the season and Adventure Gold per token ID\n in one transaction. This ensures that there is not a gap where a user\n can claim more Adventure Gold than others\n @param season_ The season to use for claiming loot\n @param adventureGoldDisplayValue The amount of Loot a user can claim.\n This should be input as the display value, not in raw decimals. If you\n want to mint 100 Loot, you should enter \"100\" rather than the value of\n 100 * 10^18.\n @dev We would save a tiny amount of gas by modifying the season and\n adventureGold variables directly. It is better practice for security,\n however, to avoid repeating code. This function is so rarely used that\n it's not worth moving these values into their own internal function to\n skip the gas used on the modifier check."
            },
            "functionSelector": "18f510eb",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 331,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 330,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "9372:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9372:9:0"
              }
            ],
            "name": "daoSetSeasonAndAdventureGoldPerTokenID",
            "nameLocation": "9250:38:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "season_",
                  "nameLocation": "9306:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "9298:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9298:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "adventureGoldDisplayValue",
                  "nameLocation": "9331:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "9323:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9323:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9288:74:0"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9382:0:0"
            },
            "scope": 343,
            "src": "9241:245:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 344,
        "src": "807:8681:0",
        "usedErrors": []
      }
    ],
    "src": "40:9449:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/will/Dropbox/Syndicate/Development/AdventureGold/contracts/AdventureGold.sol",
    "exportedSymbols": {
      "AdventureGold": [
        343
      ],
      "Context": [
        4247
      ],
      "ERC20": [
        3975
      ],
      "IERC165": [
        4259
      ],
      "IERC20": [
        4053
      ],
      "IERC20Metadata": [
        4078
      ],
      "IERC721": [
        4194
      ],
      "IERC721Enumerable": [
        4225
      ],
      "Ownable": [
        3429
      ]
    },
    "id": 344,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "40:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 3976,
        "src": "65:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 4248,
        "src": "121:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 3430,
        "src": "173:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 344,
        "sourceUnit": 4226,
        "src": "226:79:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4247,
              "src": "833:7:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "833:7:0"
          },
          {
            "baseName": {
              "id": 9,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3429,
              "src": "842:7:0"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "842:7:0"
          },
          {
            "baseName": {
              "id": 11,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3975,
              "src": "851:5:0"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "851:5:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "307:500:0",
          "text": "@title Adventure Gold for Loot holders!\n @author Will Papper <https://twitter.com/WillPapper>\n @notice This contract mints Adventure Gold for Loot holders and provides\n administrative functions to the Loot DAO. It allows:\n * Loot holders to claim Adventure Gold\n * A DAO to set seasons for new opportunities to claim Adventure Gold\n * A DAO to mint Adventure Gold for use within the Loot ecosystem\n @custom:unaudited This contract has not been audited. Use at your own risk."
        },
        "fullyImplemented": true,
        "id": 343,
        "linearizedBaseContracts": [
          343,
          3975,
          4078,
          4053,
          3429,
          4247
        ],
        "name": "AdventureGold",
        "nameLocation": "816:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a8af32e9",
            "id": 15,
            "mutability": "mutable",
            "name": "lootContractAddress",
            "nameLocation": "987:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "972:87:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 13,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "972:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307846463943316231354231363236334336316430313765653946363543353065344145303131334437",
              "id": 14,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1017:42:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xFF9C1b15B16263C61d017ee9F65C50e4AE0113D7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "35b48afd",
            "id": 18,
            "mutability": "mutable",
            "name": "lootContract",
            "nameLocation": "1090:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1065:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
              "typeString": "contract IERC721Enumerable"
            },
            "typeName": {
              "id": 17,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16,
                "name": "IERC721Enumerable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4225,
                "src": "1065:17:0"
              },
              "referencedDeclaration": 4225,
              "src": "1065:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                "typeString": "contract IERC721Enumerable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "845f290d",
            "id": 27,
            "mutability": "mutable",
            "name": "adventureGoldPerTokenId",
            "nameLocation": "1199:23:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1184:65:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1184:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130303030",
                "id": 20,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1225:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000_by_1",
                  "typeString": "int_const 10000"
                },
                "value": "10000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1234:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3504,
                        "src": "1238:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                          "typeString": "function () view returns (uint8)"
                        }
                      },
                      "id": 23,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1238:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1234:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 25,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "1233:16:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "1225:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "1335:185:0",
              "text": "function claim(uint256 tokenId) public nonReentrant {\nrequire(tokenId > 0 && tokenId < 7778, \"Token ID invalid\");\n_safeMint(_msgSender(), tokenId);\n}"
            },
            "functionSelector": "2a389062",
            "id": 31,
            "mutability": "mutable",
            "name": "tokenIdStart",
            "nameLocation": "1540:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1525:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1525:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 30,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1555:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "1643:201:0",
              "text": "function ownerClaim(uint256 tokenId) public nonReentrant onlyOwner {\nrequire(tokenId > 7777 && tokenId < 8001, \"Token ID invalid\");\n_safeMint(owner(), tokenId);\n}"
            },
            "functionSelector": "43f42802",
            "id": 35,
            "mutability": "mutable",
            "name": "tokenIdEnd",
            "nameLocation": "1864:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1849:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1849:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "38303030",
              "id": 34,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1877:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8000_by_1",
                "typeString": "int_const 8000"
              },
              "value": "8000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c50b0fb0",
            "id": 38,
            "mutability": "mutable",
            "name": "season",
            "nameLocation": "2008:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "1993:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1993:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2017:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e5e808cb",
            "id": 44,
            "mutability": "mutable",
            "name": "seasonClaimedByTokenId",
            "nameLocation": "2219:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 343,
            "src": "2167:74:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => bool))"
            },
            "typeName": {
              "id": 43,
              "keyType": {
                "id": 39,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2175:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2167:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => bool))"
              },
              "valueType": {
                "id": 42,
                "keyType": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2194:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2186:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                  "typeString": "mapping(uint256 => bool)"
                },
                "valueType": {
                  "id": 41,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2205:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "2304:334:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "307863443831344338333139384331354135343246394131334641663834443531386431373434454431",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xcD814C83198C15A542F9A13FAf84D518d1744ED1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 53,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3409,
                      "src": "2507:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2507:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "2507:61:0"
                },
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "lootContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2578:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 59,
                          "name": "lootContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2611:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 58,
                        "name": "IERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "2593:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$4225_$",
                          "typeString": "type(contract IERC721Enumerable)"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2593:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "src": "2578:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                      "typeString": "contract IERC721Enumerable"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:53:0"
                }
              ]
            },
            "id": 64,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 47,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3429,
                  "src": "2262:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2262:9:0"
              },
              {
                "arguments": [
                  {
                    "hexValue": "416476656e7475726520476f6c64",
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2278:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b8d78d7845fb7b4fe6c4c966b0b69751dd75c725bff8e54e10239259b7e7027c",
                      "typeString": "literal_string \"Adventure Gold\""
                    },
                    "value": "Adventure Gold"
                  },
                  {
                    "hexValue": "41474c44",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2296:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ed83f534da0284531b0955bad54087d798fe33369a68d69d67ac1c0ef52ee52b",
                      "typeString": "literal_string \"AGLD\""
                    },
                    "value": "AGLD"
                  }
                ],
                "id": 51,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 48,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3975,
                  "src": "2272:5:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2272:31:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2259:2:0"
            },
            "returnParameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2304:0:0"
            },
            "scope": 343,
            "src": "2248:390:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "2797:465:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 71,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4237,
                            "src": "3020:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 72,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3020:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 75,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "3057:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 73,
                              "name": "lootContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "3036:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                                "typeString": "contract IERC721Enumerable"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4127,
                            "src": "3036:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3036:29:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3020:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d5553545f4f574e5f544f4b454e5f4944",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3079:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5be89d048efec085fee54cd2df8b23477ce16bb1f2d36ec34719f0588b00139d",
                          "typeString": "literal_string \"MUST_OWN_TOKEN_ID\""
                        },
                        "value": "MUST_OWN_TOKEN_ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5be89d048efec085fee54cd2df8b23477ce16bb1f2d36ec34719f0588b00139d",
                          "typeString": "literal_string \"MUST_OWN_TOKEN_ID\""
                        }
                      ],
                      "id": 70,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2999:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2999:109:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "2999:109:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "3233:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 83,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "3242:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3242:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 81,
                      "name": "_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "3226:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3226:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "3226:29:0"
                }
              ]
            },
            "documentation": {
              "id": 65,
              "nodeType": "StructuredDocumentation",
              "src": "2644:103:0",
              "text": "@notice Claim Adventure Gold for a given Loot ID\n @param tokenId The tokenId of the Loot NFT"
            },
            "functionSelector": "becf7741",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimById",
            "nameLocation": "2761:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2779:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "2771:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2770:17:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2797:0:0"
            },
            "scope": 343,
            "src": "2752:510:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "3563:474:0",
              "statements": [
                {
                  "assignments": [
                    93
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93,
                      "mutability": "mutable",
                      "name": "tokenBalanceOwner",
                      "nameLocation": "3581:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 130,
                      "src": "3573:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3573:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 96,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "3624:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3624:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 94,
                        "name": "lootContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "3601:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                          "typeString": "contract IERC721Enumerable"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4119,
                      "src": "3601:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3573:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101,
                          "name": "tokenBalanceOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "3674:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3694:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3674:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5f544f4b454e535f4f574e4544",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3697:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165",
                          "typeString": "literal_string \"NO_TOKENS_OWNED\""
                        },
                        "value": "NO_TOKENS_OWNED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165",
                          "typeString": "literal_string \"NO_TOKENS_OWNED\""
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3666:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3666:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "3666:49:0"
                },
                {
                  "body": {
                    "id": 128,
                    "nodeType": "Block",
                    "src": "3774:257:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 120,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4237,
                                    "src": "3960:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 121,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3960:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 122,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 108,
                                  "src": "3974:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 118,
                                  "name": "lootContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "3927:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                                    "typeString": "contract IERC721Enumerable"
                                  }
                                },
                                "id": 119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4216,
                                "src": "3927:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3927:49:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 124,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4237,
                                "src": "3994:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3994:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 117,
                            "name": "_claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "3903:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3903:117:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "3903:117:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 111,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "3746:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 112,
                      "name": "tokenBalanceOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "3750:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3746:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 129,
                  "initializationExpression": {
                    "assignments": [
                      108
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 108,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3739:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 129,
                        "src": "3731:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3731:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 110,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3743:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3731:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3769:3:0",
                      "subExpression": {
                        "id": 114,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "3769:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116,
                    "nodeType": "ExpressionStatement",
                    "src": "3769:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3726:305:0"
                }
              ]
            },
            "documentation": {
              "id": 89,
              "nodeType": "StructuredDocumentation",
              "src": "3268:253:0",
              "text": "@notice Claim Adventure Gold for all tokens owned by the sender\n @notice This function will run out of gas if you have too much loot! If\n this is a concern, you should use claimRangeForOwner and claim Adventure\n Gold in batches."
            },
            "functionSelector": "cbf0b276",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAllForOwner",
            "nameLocation": "3535:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3551:2:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3563:0:0"
            },
            "scope": 343,
            "src": "3526:511:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "4475:766:0",
              "statements": [
                {
                  "assignments": [
                    140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 140,
                      "mutability": "mutable",
                      "name": "tokenBalanceOwner",
                      "nameLocation": "4493:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "4485:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4485:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 146,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 143,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4237,
                          "src": "4536:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4536:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 141,
                        "name": "lootContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4513:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                          "typeString": "contract IERC721Enumerable"
                        }
                      },
                      "id": 142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4119,
                      "src": "4513:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4513:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4485:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 148,
                          "name": "tokenBalanceOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "4586:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4606:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4586:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4f5f544f4b454e535f4f574e4544",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4609:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165",
                          "typeString": "literal_string \"NO_TOKENS_OWNED\""
                        },
                        "value": "NO_TOKENS_OWNED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddd5395ab4d64ec96577e127464e24a16920a2106510735410806839e2ae0165",
                          "typeString": "literal_string \"NO_TOKENS_OWNED\""
                        }
                      ],
                      "id": 147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4578:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4578:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "4578:49:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 155,
                            "name": "ownerIndexStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 134,
                            "src": "4808:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4827:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4808:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 158,
                            "name": "ownerIndexEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 136,
                            "src": "4832:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 159,
                            "name": "tokenBalanceOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 140,
                            "src": "4848:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4832:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4808:57:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "494e4445585f4f55545f4f465f52414e4745",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4879:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13cd002bc56c1623555285bb5c785ffb4ff56df7efcae284e655f265eccb4fd6",
                          "typeString": "literal_string \"INDEX_OUT_OF_RANGE\""
                        },
                        "value": "INDEX_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13cd002bc56c1623555285bb5c785ffb4ff56df7efcae284e655f265eccb4fd6",
                          "typeString": "literal_string \"INDEX_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4787:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4787:122:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "4787:122:0"
                },
                {
                  "body": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "4978:257:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 178,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4237,
                                    "src": "5164:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5164:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 180,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 166,
                                  "src": "5178:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 176,
                                  "name": "lootContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "5131:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                                    "typeString": "contract IERC721Enumerable"
                                  }
                                },
                                "id": 177,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4216,
                                "src": "5131:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5131:49:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 182,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4237,
                                "src": "5198:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5198:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 175,
                            "name": "_claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 232,
                            "src": "5107:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5107:117:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "5107:117:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 169,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "4954:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 170,
                      "name": "ownerIndexEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "4958:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4954:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 187,
                  "initializationExpression": {
                    "assignments": [
                      166
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4933:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 187,
                        "src": "4925:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4925:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 168,
                    "initialValue": {
                      "id": 167,
                      "name": "ownerIndexStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "4937:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4925:27:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4973:3:0",
                      "subExpression": {
                        "id": 172,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "4973:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 174,
                    "nodeType": "ExpressionStatement",
                    "src": "4973:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4920:315:0"
                }
              ]
            },
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "4043:330:0",
              "text": "@notice Claim Adventure Gold for all tokens owned by the sender within a\n given range\n @notice This function is useful if you own too much Loot to claim all at\n once or if you want to leave some Loot unclaimed. If you leave Loot\n unclaimed, however, you cannot claim it once the next season starts."
            },
            "functionSelector": "878e7ea5",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRangeForOwner",
            "nameLocation": "4387:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "ownerIndexStart",
                  "nameLocation": "4414:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "4406:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4406:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "ownerIndexEnd",
                  "nameLocation": "4439:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "4431:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4431:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4405:48:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4475:0:0"
            },
            "scope": 343,
            "src": "4378:863:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "5367:748:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 198,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "5463:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 199,
                            "name": "tokenIdStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "5474:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5463:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 201,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "5490:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 202,
                            "name": "tokenIdEnd",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "5501:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5490:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5463:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "544f4b454e5f49445f4f55545f4f465f52414e4745",
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5525:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1856cd0a1a1c8ab5e0b679a357c7cad76b58222659bb0b7bee1ce9a1b5506e1",
                          "typeString": "literal_string \"TOKEN_ID_OUT_OF_RANGE\""
                        },
                        "value": "TOKEN_ID_OUT_OF_RANGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d1856cd0a1a1c8ab5e0b679a357c7cad76b58222659bb0b7bee1ce9a1b5506e1",
                          "typeString": "literal_string \"TOKEN_ID_OUT_OF_RANGE\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5442:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5442:116:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "5442:116:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5700:40:0",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 209,
                              "name": "seasonClaimedByTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "5701:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                                "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                              }
                            },
                            "id": 211,
                            "indexExpression": {
                              "id": 210,
                              "name": "season",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "5724:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5701:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 213,
                          "indexExpression": {
                            "id": 212,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 192,
                            "src": "5732:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5701:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "474f4c445f434c41494d45445f464f525f544f4b454e5f4944",
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5754:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0a1c64304d6fbc8fce182b54883539f85cafcf014cbf22e5bc1c54f49ba9890",
                          "typeString": "literal_string \"GOLD_CLAIMED_FOR_TOKEN_ID\""
                        },
                        "value": "GOLD_CLAIMED_FOR_TOKEN_ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0a1c64304d6fbc8fce182b54883539f85cafcf014cbf22e5bc1c54f49ba9890",
                          "typeString": "literal_string \"GOLD_CLAIMED_FOR_TOKEN_ID\""
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5679:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5679:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "5679:112:0"
                },
                {
                  "expression": {
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 218,
                          "name": "seasonClaimedByTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "5924:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => bool))"
                          }
                        },
                        "id": 221,
                        "indexExpression": {
                          "id": 219,
                          "name": "season",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "5947:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5924:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 222,
                      "indexExpression": {
                        "id": 220,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "5955:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5924:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5966:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5924:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "5924:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 227,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "6072:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 228,
                        "name": "adventureGoldPerTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "6084:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 226,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3835,
                      "src": "6066:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6066:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "6066:42:0"
                }
              ]
            },
            "documentation": {
              "id": 190,
              "nodeType": "StructuredDocumentation",
              "src": "5247:53:0",
              "text": "@dev Internal function to mint Loot upon claiming"
            },
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_claim",
            "nameLocation": "5314:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5329:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "5321:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5321:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "5346:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "5338:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5338:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5320:37:0"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5367:0:0"
            },
            "scope": 343,
            "src": "5305:810:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "6510:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 241,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "6526:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6526:7:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 243,
                          "name": "amountDisplayValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "6535:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6557:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 245,
                                  "name": "decimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3504,
                                  "src": "6561:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                    "typeString": "function () view returns (uint8)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6561:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "6557:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 248,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6556:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6535:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 240,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3835,
                      "src": "6520:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6520:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "6520:53:0"
                }
              ]
            },
            "documentation": {
              "id": 233,
              "nodeType": "StructuredDocumentation",
              "src": "6121:320:0",
              "text": "@notice Allows the DAO to mint new tokens for use within the Loot\n Ecosystem\n @param amountDisplayValue The amount of Loot to mint. This should be\n input as the display value, not in raw decimals. If you want to mint\n 100 Loot, you should enter \"100\" rather than the value of 100 * 10^18."
            },
            "functionSelector": "62759f6c",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 237,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "6500:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6500:9:0"
              }
            ],
            "name": "daoMint",
            "nameLocation": "6455:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "amountDisplayValue",
                  "nameLocation": "6471:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "6463:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6462:28:0"
            },
            "returnParameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6510:0:0"
            },
            "scope": 343,
            "src": "6446:134:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 271,
              "nodeType": "Block",
              "src": "6907:122:0",
              "statements": [
                {
                  "expression": {
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 261,
                      "name": "lootContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "6917:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 262,
                      "name": "lootContractAddress_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "6939:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6917:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "6917:42:0"
                },
                {
                  "expression": {
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 265,
                      "name": "lootContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "6969:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 267,
                          "name": "lootContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "7002:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 266,
                        "name": "IERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4225,
                        "src": "6984:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$4225_$",
                          "typeString": "type(contract IERC721Enumerable)"
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6984:38:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "src": "6969:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Enumerable_$4225",
                      "typeString": "contract IERC721Enumerable"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "6969:53:0"
                }
              ]
            },
            "documentation": {
              "id": 254,
              "nodeType": "StructuredDocumentation",
              "src": "6586:212:0",
              "text": "@notice Allows the DAO to set a new contract address for Loot. This is\n relevant in the event that Loot migrates to a new contract.\n @param lootContractAddress_ The new contract address for Loot"
            },
            "functionSelector": "32c88204",
            "id": 272,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 259,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 258,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "6893:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6893:9:0"
              }
            ],
            "name": "daoSetLootContractAddress",
            "nameLocation": "6812:25:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "lootContractAddress_",
                  "nameLocation": "6846:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 272,
                  "src": "6838:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6838:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6837:30:0"
            },
            "returnParameters": {
              "id": 260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6907:0:0"
            },
            "scope": 343,
            "src": "6803:226:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "7474:79:0",
              "statements": [
                {
                  "expression": {
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 282,
                      "name": "tokenIdStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "7484:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 283,
                      "name": "tokenIdStart_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "7499:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7484:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "7484:28:0"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 286,
                      "name": "tokenIdEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "7522:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 287,
                      "name": "tokenIdEnd_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "7535:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7522:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "7522:24:0"
                }
              ]
            },
            "documentation": {
              "id": 273,
              "nodeType": "StructuredDocumentation",
              "src": "7035:323:0",
              "text": "@notice Allows the DAO to set the token IDs that are eligible to claim\n Loot\n @param tokenIdStart_ The start of the eligible token range\n @param tokenIdEnd_ The end of the eligible token range\n @dev This is relevant in case a future Loot contract has a different\n total supply of Loot"
            },
            "functionSelector": "4da7808a",
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 280,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 279,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "7460:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7460:9:0"
              }
            ],
            "name": "daoSetTokenIdRange",
            "nameLocation": "7372:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "tokenIdStart_",
                  "nameLocation": "7399:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "7391:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7391:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "tokenIdEnd_",
                  "nameLocation": "7422:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "7414:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7414:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7390:44:0"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7474:0:0"
            },
            "scope": 343,
            "src": "7363:190:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 303,
              "nodeType": "Block",
              "src": "7751:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 299,
                      "name": "season",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "7761:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 300,
                      "name": "season_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "7770:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7761:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "7761:16:0"
                }
              ]
            },
            "documentation": {
              "id": 292,
              "nodeType": "StructuredDocumentation",
              "src": "7559:131:0",
              "text": "@notice Allows the DAO to set a season for new Adventure Gold claims\n @param season_ The season to use for claiming Loot"
            },
            "functionSelector": "42e47315",
            "id": 304,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 297,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 296,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "7741:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7741:9:0"
              }
            ],
            "name": "daoSetSeason",
            "nameLocation": "7704:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "season_",
                  "nameLocation": "7725:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 304,
                  "src": "7717:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7717:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7716:17:0"
            },
            "returnParameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7751:0:0"
            },
            "scope": 343,
            "src": "7695:89:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "8262:87:0",
              "statements": [
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 312,
                      "name": "adventureGoldPerTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "8272:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 313,
                        "name": "adventureGoldDisplayValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "8298:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8327:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 315,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3504,
                                "src": "8331:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view returns (uint8)"
                                }
                              },
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8331:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "8327:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 318,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8326:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8298:44:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8272:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "8272:70:0"
                }
              ]
            },
            "documentation": {
              "id": 305,
              "nodeType": "StructuredDocumentation",
              "src": "7790:356:0",
              "text": "@notice Allows the DAO to set the amount of Adventure Gold that is\n claimed per token ID\n @param adventureGoldDisplayValue The amount of Loot a user can claim.\n This should be input as the display value, not in raw decimals. If you\n want to mint 100 Loot, you should enter \"100\" rather than the value of\n 100 * 10^18."
            },
            "functionSelector": "32565c49",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 309,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "8248:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8248:9:0"
              }
            ],
            "name": "daoSetAdventureGoldPerTokenId",
            "nameLocation": "8160:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "adventureGoldDisplayValue",
                  "nameLocation": "8198:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "8190:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8190:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8189:35:0"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8262:0:0"
            },
            "scope": 343,
            "src": "8151:198:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "9382:104:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 334,
                        "name": "season_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "9405:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 333,
                      "name": "daoSetSeason",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "9392:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9392:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "9392:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 338,
                        "name": "adventureGoldDisplayValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "9453:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 337,
                      "name": "daoSetAdventureGoldPerTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 323,
                      "src": "9423:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9423:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "9423:56:0"
                }
              ]
            },
            "documentation": {
              "id": 324,
              "nodeType": "StructuredDocumentation",
              "src": "8355:881:0",
              "text": "@notice Allows the DAO to set the season and Adventure Gold per token ID\n in one transaction. This ensures that there is not a gap where a user\n can claim more Adventure Gold than others\n @param season_ The season to use for claiming loot\n @param adventureGoldDisplayValue The amount of Loot a user can claim.\n This should be input as the display value, not in raw decimals. If you\n want to mint 100 Loot, you should enter \"100\" rather than the value of\n 100 * 10^18.\n @dev We would save a tiny amount of gas by modifying the season and\n adventureGold variables directly. It is better practice for security,\n however, to avoid repeating code. This function is so rarely used that\n it's not worth moving these values into their own internal function to\n skip the gas used on the modifier check."
            },
            "functionSelector": "18f510eb",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 331,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 330,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3372,
                  "src": "9372:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9372:9:0"
              }
            ],
            "name": "daoSetSeasonAndAdventureGoldPerTokenID",
            "nameLocation": "9250:38:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "season_",
                  "nameLocation": "9306:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "9298:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9298:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "adventureGoldDisplayValue",
                  "nameLocation": "9331:25:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "9323:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9323:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9288:74:0"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9382:0:0"
            },
            "scope": 343,
            "src": "9241:245:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 344,
        "src": "807:8681:0",
        "usedErrors": []
      }
    ],
    "src": "40:9449:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-09-01T16:26:06.253Z",
  "devdoc": {
    "author": "Will Papper <https://twitter.com/WillPapper>",
    "custom:unaudited": "This contract has not been audited. Use at your own risk.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "claimById(uint256)": {
        "params": {
          "tokenId": "The tokenId of the Loot NFT"
        }
      },
      "daoMint(uint256)": {
        "params": {
          "amountDisplayValue": "The amount of Loot to mint. This should be input as the display value, not in raw decimals. If you want to mint 100 Loot, you should enter \"100\" rather than the value of 100 * 10^18."
        }
      },
      "daoSetAdventureGoldPerTokenId(uint256)": {
        "params": {
          "adventureGoldDisplayValue": "The amount of Loot a user can claim. This should be input as the display value, not in raw decimals. If you want to mint 100 Loot, you should enter \"100\" rather than the value of 100 * 10^18."
        }
      },
      "daoSetLootContractAddress(address)": {
        "params": {
          "lootContractAddress_": "The new contract address for Loot"
        }
      },
      "daoSetSeason(uint256)": {
        "params": {
          "season_": "The season to use for claiming Loot"
        }
      },
      "daoSetSeasonAndAdventureGoldPerTokenID(uint256,uint256)": {
        "details": "We would save a tiny amount of gas by modifying the season and adventureGold variables directly. It is better practice for security, however, to avoid repeating code. This function is so rarely used that it's not worth moving these values into their own internal function to skip the gas used on the modifier check.",
        "params": {
          "adventureGoldDisplayValue": "The amount of Loot a user can claim. This should be input as the display value, not in raw decimals. If you want to mint 100 Loot, you should enter \"100\" rather than the value of 100 * 10^18.",
          "season_": "The season to use for claiming loot"
        }
      },
      "daoSetTokenIdRange(uint256,uint256)": {
        "details": "This is relevant in case a future Loot contract has a different total supply of Loot",
        "params": {
          "tokenIdEnd_": "The end of the eligible token range",
          "tokenIdStart_": "The start of the eligible token range"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Adventure Gold for Loot holders!",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claimAllForOwner()": {
        "notice": "Claim Adventure Gold for all tokens owned by the senderThis function will run out of gas if you have too much loot! If this is a concern, you should use claimRangeForOwner and claim Adventure Gold in batches."
      },
      "claimById(uint256)": {
        "notice": "Claim Adventure Gold for a given Loot ID"
      },
      "claimRangeForOwner(uint256,uint256)": {
        "notice": "Claim Adventure Gold for all tokens owned by the sender within a given rangeThis function is useful if you own too much Loot to claim all at once or if you want to leave some Loot unclaimed. If you leave Loot unclaimed, however, you cannot claim it once the next season starts."
      },
      "daoMint(uint256)": {
        "notice": "Allows the DAO to mint new tokens for use within the Loot Ecosystem"
      },
      "daoSetAdventureGoldPerTokenId(uint256)": {
        "notice": "Allows the DAO to set the amount of Adventure Gold that is claimed per token ID"
      },
      "daoSetLootContractAddress(address)": {
        "notice": "Allows the DAO to set a new contract address for Loot. This is relevant in the event that Loot migrates to a new contract."
      },
      "daoSetSeason(uint256)": {
        "notice": "Allows the DAO to set a season for new Adventure Gold claims"
      },
      "daoSetSeasonAndAdventureGoldPerTokenID(uint256,uint256)": {
        "notice": "Allows the DAO to set the season and Adventure Gold per token ID in one transaction. This ensures that there is not a gap where a user can claim more Adventure Gold than others"
      },
      "daoSetTokenIdRange(uint256,uint256)": {
        "notice": "Allows the DAO to set the token IDs that are eligible to claim Loot"
      },
      "tokenIdEnd()": {
        "notice": "function ownerClaim(uint256 tokenId) public nonReentrant onlyOwner { require(tokenId > 7777 && tokenId < 8001, \"Token ID invalid\"); _safeMint(owner(), tokenId); }"
      },
      "tokenIdStart()": {
        "notice": "function claim(uint256 tokenId) public nonReentrant { require(tokenId > 0 && tokenId < 7778, \"Token ID invalid\"); _safeMint(_msgSender(), tokenId); }"
      }
    },
    "notice": "This contract mints Adventure Gold for Loot holders and provides administrative functions to the Loot DAO. It allows: * Loot holders to claim Adventure Gold * A DAO to set seasons for new opportunities to claim Adventure Gold * A DAO to mint Adventure Gold for use within the Loot ecosystem",
    "version": 1
  }
}